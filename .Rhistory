)
vignette_data$events_2$sequence_event_counts %>%
ggplot(aes(x=eventnum, y=soe, group=sequence)) +
geom_line(aes(linewidth = log(n)), alpha=.6) +
geom_label(
inherit.aes = F,
data = vignette_data$events_2$event_counts,
aes(x=eventnum, y=soe, size=log(n), label = scales::comma(n, accuracy = 1))
) +
#facet_grid(region~fatal, scales = "free_y", space = "free_y") +
scale_x_discrete(expand = expansion(add=c(.2, .6))) +
facet_grid(fatal~region, scales = "free_y", space = "free_y") +
guides(size=FALSE, linewidth=FALSE) +
labs(
x = "Event Number (Relative to Last Event)",
y = NULL,
title = "Crash Sequences",
subtitle = "Pedestrian crashes in 2023"
) +
theme_minimal() +
theme(
axis.ticks = element_blank()
)
vignette_data$events_2$sequence_event_counts %>%
ggplot(aes(x=eventnum, y=soe, group=sequence)) +
geom_line(aes(linewidth = log(n)), alpha=.6) +
geom_label(
inherit.aes = F,
data = vignette_data$events_2$event_counts,
aes(x=eventnum, y=soe, size=log(n), label = scales::comma(n, accuracy = 1))
) +
#facet_grid(region~fatal, scales = "free_y", space = "free_y") +
scale_x_discrete(expand = expansion(add=c(.2, .6))) +
facet_grid(fatal~region, scales = "free_y", space = "free_y") +
guides(size=FALSE, linewidth=FALSE) +
labs(
x = "Event Number (Relative to Last Event)",
y = NULL,
title = "Crash Sequences",
subtitle = "Pedestrian crashes in 2023"
) +
theme(
axis.ticks = element_blank(),
strip.text.y.right = element_text(angle=0)
)
events_temp <-
my_events %>%
group_by(casenum, veh_no) %>%
mutate(
veventnum = as.numeric(as.character(veventnum)),
lasteventnum = max(veventnum)
) %>%
ungroup() %>%
filter(soe=="Pedestrian" & veventnum==lasteventnum) %>%
distinct(casenum, veh_no, year, lasteventnum) %>%
left_join(events_data$events) %>%
left_join(
distinct(events_data$flat, year, region, casenum, max_sev, weight) %>%
mutate_at(c("casenum", "year"), as.character) %>%
mutate_at(c("region"), word)
) %>%
mutate(
fatal = factor(ifelse(max_sev != "Fatal Injury (K)", "Non-Fatal", "Fatal"), ordered = T),
veventnum = as.numeric(as.character(veventnum)),
eventnum = as.factor(veventnum - lasteventnum),
soe = str_replace_all(soe, "Motor Vehicle In-Transport Strikes or is Struck by Cargo, Persons or Objects Set-in-Motion from/by Another Motor Vehicle In Transport", "Motor Vehicle In-Transport Strikes or is Struck by Something")
)
sequences <-
events_temp %>%
arrange(casenum, eventnum) %>%
distinct(casenum, region, eventnum, soe, fatal) %>%
group_by(casenum, region, fatal) %>%
summarize(sequence = paste0(soe, collapse = " THEN "), .groups = "drop")
sequences_meta <-
sequences %>%
group_by(sequence, region, fatal) %>%
summarize(sequence_n = n(), .groups = "drop") %>%
arrange(-sequence_n) %>%
mutate(sequence_num = row_number()) %>%
filter(sequence_n > 1)
sequence_event_counts <-
inner_join(events_temp, sequences) %>%
group_by(sequence, soe, eventnum, region, fatal) %>%
summarize(n=sum(weight)) %>%
filter(sequence %in% unique(sequences_meta$sequence))
event_counts <-
sequence_event_counts %>%
group_by(soe, eventnum, region, fatal) %>%
summarize(n=sum(n))
sequence_event_counts %>%
ggplot(aes(x=eventnum, y=soe, group=sequence)) +
geom_line(aes(linewidth = log(n)), alpha=.6) +
geom_label(
inherit.aes = F,
data = event_counts,
aes(x=eventnum, y=soe, size=log(n), label = scales::comma(n, accuracy = 1))
) +
scale_x_discrete(expand = expansion(add=c(.2, .6))) +
facet_grid(fatal~region, scales = "free_y", space = "free_y") +
guides(size=FALSE, linewidth=FALSE) +
labs(
x = "Event Number (Relative to Last Event)",
y = NULL,
title = "Crash Sequences",
subtitle = "Pedestrian crashes in 2023"
) +
theme(
axis.ticks = element_blank(),
strip.text.y.right = element_text(angle=0)
)
events_temp <-
my_events %>%
group_by(casenum, veh_no) %>%
mutate(
veventnum = as.numeric(as.character(veventnum)),
lasteventnum = max(veventnum)
) %>%
ungroup() %>%
filter(soe=="Pedestrian" & veventnum==lasteventnum) %>%
distinct(casenum, veh_no, year, lasteventnum) %>%
left_join(events_data$events) %>%
left_join(
distinct(events_data$flat, year, region, casenum, max_sev, weight) %>%
mutate_at(c("casenum", "year"), as.character) %>%
mutate_at(c("region"), word)
) %>%
mutate(
fatal = factor(ifelse(max_sev != "Fatal Injury (K)", "Non-Fatal", "Fatal"), ordered = T),
veventnum = as.numeric(as.character(veventnum)),
eventnum = as.factor(veventnum - lasteventnum),
soe = str_replace_all(soe, "Motor Vehicle In-Transport Strikes or is Struck by Cargo, Persons or Objects Set-in-Motion from/by Another Motor Vehicle In Transport", "Motor Vehicle In-Transport Strikes or is Struck by Something")
)
sequences <-
events_temp %>%
arrange(casenum, eventnum) %>%
distinct(casenum, region, eventnum, soe, fatal) %>%
group_by(casenum, region, fatal) %>%
summarize(sequence = paste0(soe, collapse = " THEN "), .groups = "drop")
sequences_meta <-
sequences %>%
group_by(sequence, region, fatal) %>%
summarize(sequence_n = n(), .groups = "drop") %>%
arrange(-sequence_n) %>%
mutate(sequence_num = row_number()) %>%
filter(sequence_n > 1)
sequence_event_counts <-
inner_join(events_temp, sequences) %>%
group_by(sequence, soe, eventnum, region, fatal) %>%
summarize(n=sum(weight)) %>%
filter(sequence %in% unique(sequences_meta$sequence))
event_counts <-
sequence_event_counts %>%
group_by(soe, eventnum, region, fatal) %>%
summarize(n=sum(n))
sequence_event_counts %>%
ggplot(aes(x=eventnum, y=soe, group=sequence)) +
geom_line(aes(linewidth = log(n)), alpha=.6) +
geom_label(
inherit.aes = F,
data = event_counts,
aes(x=eventnum, y=soe, size=log(n), label = scales::comma(n, accuracy = 1))
) +
scale_x_discrete(expand = expansion(add=c(.2, .6))) +
facet_grid(fatal~region, scales = "free_y", space = "free_y") +
guides(size=FALSE, linewidth=FALSE) +
labs(
x = "Event Number (Relative to Last Event)",
y = NULL,
title = "Crash Sequences",
subtitle = "Pedestrian crashes in 2023"
) +
theme(
axis.ticks = element_blank(),
strip.text.y.right = element_text(angle=0)
)
vignette_data$events_2$sequence_event_counts %>%
ggplot(aes(x=eventnum, y=soe, group=sequence)) +
geom_line(aes(linewidth = log(n)), alpha=.6) +
geom_label(
inherit.aes = F,
data = vignette_data$events_2$event_counts,
aes(x=eventnum, y=soe, size=log(n), label = scales::comma(n, accuracy = 1))
) +
scale_x_discrete(expand = expansion(add=c(.2, .6))) +
facet_grid(fatal~region, scales = "free_y", space = "free_y") +
guides(size=FALSE, linewidth=FALSE) +
labs(
x = "Event Number (Relative to Last Event)",
y = NULL,
title = "Crash Sequences",
subtitle = "Pedestrian crashes in 2023"
) +
theme(
axis.ticks = element_blank(),
strip.text.y.right = element_text(angle=0)
)
516-31
cat(516-31)
library(rfars)
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
vignette_data$events_2$sequence_event_counts %>%
ggplot(aes(x=eventnum, y=soe, group=sequence)) +
geom_line(aes(linewidth = log(n)), alpha=.6) +
geom_label(
inherit.aes = F,
data = vignette_data$events_2$event_counts,
aes(x=eventnum, y=soe, size=log(n), label = scales::comma(n, accuracy = 1))
) +
scale_x_discrete(expand = expansion(add=c(.2, .6))) +
facet_grid(fatal~region, scales = "free_y", space = "free_y") +
guides(size=FALSE, linewidth=FALSE) +
labs(
x = "Event Number (Relative to Last Event)",
y = NULL,
title = "Crash Sequences",
subtitle = "Pedestrian crashes in 2023"
) +
theme(
axis.ticks = element_blank(),
strip.text.y.right = element_text(angle=0)
)
vignette_data$events_2$sequence_event_counts %>%
ggplot(aes(x=eventnum, y=soe, group=sequence)) +
geom_line(aes(linewidth = log(n)), alpha=.6) +
geom_label(
inherit.aes = F,
data = vignette_data$events_2$event_counts,
aes(x=eventnum, y=soe, size=log(n), label = scales::comma(n, accuracy = 1))
) +
scale_x_discrete(expand = expansion(add=c(.2, .6))) +
facet_grid(fatal~region, scales = "free_y", space = "free_y") +
guides(size="none", linewidth="none") +
labs(
x = "Event Number (Relative to Last Event)",
y = NULL,
title = "Crash Sequences",
subtitle = "Pedestrian crashes in 2023"
) +
theme(
axis.ticks = element_blank(),
strip.text.y.right = element_text(angle=0)
)
12/7
# ReadMe ----
myFARS <- get_fars(years = 2014, proceed = TRUE)
ids <- sample(unique(myFARS$flat$id), size = 2)
myFARS_sample <- {
print(ids)
flat <- filter(myFARS$flat, id %in% ids)
multi_acc = filter(myFARS$multi_acc, st_case %in% flat$st_case)
multi_veh = filter(myFARS$multi_veh, st_case %in% flat$st_case)
multi_per = filter(myFARS$multi_per, st_case %in% flat$st_case)
events    = filter(myFARS$events,    st_case %in% flat$st_case)
list(
flat = flat,
multi_acc = multi_acc,
multi_veh = multi_acc,
multi_per = multi_per,
events = events
)
}
# Counts ----
myFARS_counts <- get_fars(years = 2019:2023, proceed = T, states = "VA")
counts_1 <- counts(
df = myFARS_counts,
where = list(states = "VA"),
what = "crashes",
interval = c("year", "month")
)
counts_2 <- counts(
myFARS_counts,
where = list(states = "VA"),
what = "fatalities",
interval = c("year")
)
counts_3 <- counts(
df = myFARS_counts,
where = list(states = "VA"),
what = "fatalities",
interval = c("year"),
involved = "speeding"
)
counts_4 <- counts(
myFARS_counts,
where = list(states = "VA", urb="rural"),
what = "fatalities",
interval = c("year"),
involved = "speeding"
)
counts_5 <- counts(
df = myFARS_counts,
where = list(states = "VA"),
what = "crashes",
interval = "year",
involved = "each"
)
counts_6 <- compare_counts(
df = myFARS_counts,
interval = "year",
involved = "speeding",
what = "fatalities",
where = list(states = "VA", urb="rural"),
where2 = list(states = "VA", urb="urban")
)
counts_7 <- compare_counts(
df = myFARS_counts,
where = list(states = "VA"),
interval = "year",
involved = "speeding",
involved2 = "distracted driver",
what = "crashes",
)
# Alcohol Counts ----
myFARS_alccounts <- get_fars(years = 2023, proceed = TRUE)
alccounts_1 <- counts(myFARS_alccounts, involved = 'alcohol')
alccounts_2 <- counts(
df = myFARS_alccounts,
what = "fatalities",
involved = 'alcohol'
)
alccounts_temp <- {
temp <- myFARS_alccounts$flat %>%
select(year:per_no, age, sex, per_typ, inj_sev, alc_res, dr_drink, a1:a10) %>%
filter(inj_sev == "Fatal Injury (K)")
for(i in 1:10) {
imputation_col <- paste0("a", i)
temp[[paste0("FPC", i)]] <- ifelse(temp[[imputation_col]] == 0, 1, 0)  # BAC = 0.00
temp[[paste0("SPC", i)]] <- ifelse(temp[[imputation_col]] >= 1 & temp[[imputation_col]] <= 7, 1, 0)  # BAC = 0.01-0.07
temp[[paste0("TPC", i)]] <- ifelse(temp[[imputation_col]] >= 8, 1, 0)  # BAC = 0.08+
}
temp
}
alccounts_3 <- alccounts_temp %>%
select(st_case, a1:a10, starts_with("FPC"), starts_with("SPC"), starts_with("TPC")) %>%
slice(1:10)
alccounts_4 <- alccounts_temp %>%
slice(1) %>%
select(st_case, a1:a10, starts_with("FPC"), starts_with("SPC"), starts_with("TPC")) %>%
pivot_longer(-1) %>%
mutate(
iter = gsub("\\D", "", name),
name = gsub("[^A-Za-z]", "", name)
)
alccounts_case_results <- list()
for(i in 1:10) {
fpc_col <- paste0("FPC", i)
spc_col <- paste0("SPC", i)
tpc_col <- paste0("TPC", i)
alccounts_case_results[[i]] <-
alccounts_temp %>%
summarise(
TOTAL = n(),
!!paste0("FSBAC", i) := sum(!!sym(fpc_col), na.rm = TRUE),
!!paste0("SSBAC", i) := sum(!!sym(spc_col), na.rm = TRUE),
!!paste0("TSBAC", i) := sum(!!sym(tpc_col), na.rm = TRUE),
.groups = 'drop'
)
}
alccounts_5 <- bind_rows(
data.frame(alccounts_case_results[[1]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=1),
data.frame(alccounts_case_results[[2]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=2),
data.frame(alccounts_case_results[[3]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=3),
data.frame(alccounts_case_results[[4]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=4),
data.frame(alccounts_case_results[[5]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=5),
data.frame(alccounts_case_results[[6]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=6),
data.frame(alccounts_case_results[[7]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=7),
data.frame(alccounts_case_results[[8]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=8),
data.frame(alccounts_case_results[[9]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=9),
data.frame(alccounts_case_results[[10]]) %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=10)
)
alccounts_6 <- {
calc <- alccounts_case_results[[1]]
for(i in 2:10) {
calc <- calc %>% bind_cols(alccounts_case_results[[i]] %>% select(-TOTAL))
}
calc <-
calc %>%
rowwise() %>%
mutate(
SBAC0 = round(mean(c_across(starts_with("FSBAC")), na.rm = TRUE)), # BAC 0.00
SBAC1 = round(mean(c_across(starts_with("SSBAC")), na.rm = TRUE)), # BAC 0.01-0.07
SBAC2 = round(mean(c_across(starts_with("TSBAC")), na.rm = TRUE))  # BAC 0.08+
) %>%
ungroup() %>%
select(SBAC0:SBAC2)
calc
}
alccounts_7 <- {
x <-
myFARS_alccounts$flat %>%
select(year:per_no, age, sex, per_typ, inj_sev, alc_res, dr_drink, a1:a10) %>%
filter(inj_sev == "Fatal Injury (K)") %>%
mutate_at(paste0("a", 1:10), function(x) 1*(x>=8)) %>%
group_by(year) %>%
summarize_at(paste0("a", 1:10), sum, na.rm=T) %>%
rowwise() %>%
mutate(a = round(mean(c_across(a1:a10))))
x$a
}
# x Crash Sequence of Events ----
events_data <- rfars::get_gescrss(years=2023, proceed = TRUE)
sample_casenum <- "202304741191"
# filter(events_data$events, veventnum==6, veh_no==2) %>%
# pull("casenum") %>%
# sample(size=1)
events_1 <- filter(events_data$events, casenum == sample_casenum)
#unique(events_data$events$soe)
# events_data$flat %>%
#   #filter(per_typ == "Pedestrian", max_sev == "Fatal Injury (K)") %>%
#   filter(per_typ == "Pedestrian") %>%
#   distinct(casenum, weight) %>%
#   summarize(n = sum(weight))
events_2 <- {
events_temp <-
events_data$events %>%
group_by(casenum, veh_no) %>%
mutate(
veventnum = as.numeric(as.character(veventnum)),
lasteventnum = max(veventnum)
) %>%
ungroup() %>%
filter(soe=="Pedestrian" & veventnum==lasteventnum) %>%
distinct(casenum, veh_no, year, lasteventnum) %>%
left_join(events_data$events) %>%
left_join(
distinct(events_data$flat, year, region, casenum, max_sev, weight) %>%
mutate_at(c("casenum", "year"), as.character) %>%
mutate_at(c("region"), word)
) %>%
mutate(
fatal = factor(ifelse(max_sev != "Fatal Injury (K)", "Non-Fatal", "Fatal"), ordered = T),
veventnum = as.numeric(as.character(veventnum)),
eventnum = as.factor(veventnum - lasteventnum),
soe = str_replace_all(soe, "Motor Vehicle In-Transport Strikes or is Struck by Cargo, Persons or Objects Set-in-Motion from/by Another Motor Vehicle In Transport", "Motor Vehicle In-Transport Strikes or is Struck by Something")
)
sequences <-
events_temp %>%
arrange(casenum, eventnum) %>%
distinct(casenum, region, eventnum, soe, fatal) %>%
group_by(casenum, region, fatal) %>%
summarize(sequence = paste0(soe, collapse = " THEN "), .groups = "drop")
sequences_meta <-
sequences %>%
group_by(sequence, region, fatal) %>%
summarize(sequence_n = n(), .groups = "drop") %>%
arrange(-sequence_n) %>%
mutate(sequence_num = row_number()) %>%
filter(sequence_n > 1)
sequence_event_counts <-
inner_join(events_temp, sequences) %>%
group_by(sequence, soe, eventnum, region, fatal) %>%
summarize(n=sum(weight)) %>%
filter(sequence %in% unique(sequences_meta$sequence))
event_counts <-
sequence_event_counts %>%
group_by(soe, eventnum, region, fatal) %>%
summarize(n=sum(n))
list(
sequence_event_counts=sequence_event_counts,
event_counts = event_counts
)
}
sequence_event_counts %>%
ggplot(aes(x=eventnum, y=soe, group=sequence)) +
geom_line(aes(linewidth = log(n)), alpha=.6) +
geom_point(
inherit.aes = F,
data = event_counts,
aes(x=eventnum, y=soe, size=log(n))
) +
geom_label(
inherit.aes = F,
data = event_counts,
aes(x=eventnum, y=soe, size=log(n), label = scales::comma(n, accuracy = 1))
) +
facet_grid(region~fatal, scales = "free_y") +
guides(size=FALSE, linewidth=FALSE) +
labs(
x = "Event Number (Relative to Last Event)",
y = NULL,
title = "Crash Sequences",
subtitle = "Pedestrian crashes in 2023"
) +
theme(
axis.ticks = element_blank()
)
# Save ----
vignette_data <- list(
myFARS_sample = myFARS_sample,
counts_1 = counts_1,
counts_2 = counts_2,
counts_3 = counts_3,
counts_4 = counts_4,
counts_5 = counts_5,
counts_6 = counts_6,
counts_7 = counts_7,
alccounts_1 = alccounts_1,
alccounts_2 = alccounts_2,
alccounts_3 = alccounts_3,
alccounts_4 = alccounts_4,
alccounts_5 = alccounts_5,
alccounts_6 = alccounts_6,
alccounts_7 = alccounts_7,
events_1 = events_1,
events_2 = events_2
)
usethis::use_data(vignette_data, overwrite = TRUE, internal = TRUE)
# devtools::load_all()
# vignette_data <- rfars:::vignette_data
