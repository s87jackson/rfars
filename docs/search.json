[{"path":"https://s87jackson.github.io/rfars/articles/Alcohol_Counts.html","id":"alcohol-counts","dir":"Articles","previous_headings":"","what":"Alcohol Counts","title":"Alcohol Counts","text":"Counts involving alcohol complicated due high rate missing BAC values. FARS GESCRSS include variables alc_res (BAC values) dr_drink (police-reported alcohol involvement). NHTSA also uses multiple imputation (MI) estimate missing BAC values FARS records (GES/CRSS records). Traffic Safety Facts uses MI report number fatalities crashes involving driver BAC .08 g/dL higher. Using alc_res dr_drink produce smaller counts produced via MI. rfars::counts() counts alcohol-involved crashes, fatalities injuries using alc_res dr_drink. However, flat object returned get_fars() includes MI variables a1:a10 Midrvacc file, p1:p10 Miper file. explore differences show use MI variables replicate NHTSA’s reporting. See Appendix E FARS Analytical User’s Manual information files. use rfars::counts() count alcohol-involved crashes: use rfars::counts() count number alcohol-involved fatalities: MI process produces 10 separate BAC estimates. Miper file provides p1:p10, person level BAC estimates driver non-occupant FARS Person data file. Midrvacc file provides variables a1:a10, crash level BAC estimates derived driver records Miper file. replicate estimated number fatalities reported Traffic Safety Facts, implement procedure . Step 1. Start flat object filter fatalities. generate 30 indicator variables, 10 FPC_i, 10 SPC_i, 10 TPC_i variables. corresponds 10 a_i p_i variables. FPC indicates BAC = 0.00, SPC BAC 0.01 0.07, TPC BAC >= 0.08. a_1 = 5 (representing BAC 0.05), FPC_1 = 0, SPC_1 = 1, TPC_1 = 0. produces table (transposed easier viewing). can examine one crash see relation FPC, SPS, TPC variables. table shows 10 iterations , corresponding indicator variables. Step 2. Sum indicator variables iteration. produces 10 estimates number fatalities crashes BAC = 0 (FSBAC), BAC 0.01 0.07 (SSBAC), BAC >= 0.08 (TSBAC). table shows estimates. Step 3. Take average set estimates. gives us answer. values give final estimates number fatalities crashes BAC = 0 (SBAC0), BAC 0.01 0.07 (SBAC1), BAC >= 0.08 (SBAC2). value SBAC2 12,429, matches Traffic Safety Facts 2023. Shortcut. can directly ’re interested number fatalities crashes alcohol-impaired drivers: Please see Transitioning Multiple Imputation – New Method Impute Missing BAC values FARS guidance generating counts using MI data.","code":"library(dplyr) library(ggplot2) ## Warning: package 'ggplot2' was built under R version 4.4.3 library(tidyr) library(rfars) myFARS <- get_fars(years = 2023, proceed = TRUE)  counts(myFARS, involved = 'alcohol') %>% knitr::kable(format = \"html\") ## Note: rfars::counts() uses the variables alc_res and dr_drink to determine alcohol involvement. NHTSA reports counts using multiple imputation to estimate missing BAC values. See vignette('Alcohol Counts', package = 'rfars') for more information. counts(   df = myFARS,    what = \"fatalities\",   involved = 'alcohol' ) %>%   knitr::kable(format = \"html\") ## Note: rfars::counts() uses the variables alc_res and dr_drink to determine alcohol involvement. NHTSA reports counts using multiple imputation to estimate missing BAC values. See vignette('Alcohol Counts', package = 'rfars') for more information. temp <- myFARS$flat %>%    select(year:per_no, age, sex, per_typ, inj_sev, alc_res, dr_drink, a1:a10) %>%   filter(inj_sev == \"Fatal Injury (K)\")  for(i in 1:10) {   imputation_col <- paste0(\"a\", i)   temp[[paste0(\"FPC\", i)]] <- ifelse(temp[[imputation_col]] == 0, 1, 0)  # BAC = 0.00   temp[[paste0(\"SPC\", i)]] <- ifelse(temp[[imputation_col]] >= 1 & temp[[imputation_col]] <= 7, 1, 0)  # BAC = 0.01-0.07   temp[[paste0(\"TPC\", i)]] <- ifelse(temp[[imputation_col]] >= 8, 1, 0)  # BAC = 0.08+ } temp %>%    select(st_case, a1:a10, starts_with(\"FPC\"), starts_with(\"SPC\"), starts_with(\"TPC\")) %>%    slice(1:10) %>%    t() %>%   knitr::kable(format = \"html\") temp %>%    slice(1) %>%    select(st_case, a1:a10, starts_with(\"FPC\"), starts_with(\"SPC\"), starts_with(\"TPC\")) %>%   pivot_longer(-1) %>%   mutate(     iter = gsub(\"\\\\D\", \"\", name),     name = gsub(\"[^A-Za-z]\", \"\", name)   ) %>%   pivot_wider() %>%   knitr::kable(format = \"html\") case_results <- list()  for(i in 1:10) {   fpc_col <- paste0(\"FPC\", i)   spc_col <- paste0(\"SPC\", i)   tpc_col <- paste0(\"TPC\", i)      case_results[[i]] <-     temp %>%     summarise(       TOTAL = n(),       !!paste0(\"FSBAC\", i) := sum(!!sym(fpc_col), na.rm = TRUE),       !!paste0(\"SSBAC\", i) := sum(!!sym(spc_col), na.rm = TRUE),       !!paste0(\"TSBAC\", i) := sum(!!sym(tpc_col), na.rm = TRUE),       .groups = 'drop'     ) } bind_rows(   data.frame(case_results[[1]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=1),   data.frame(case_results[[2]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=2),   data.frame(case_results[[3]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=3),   data.frame(case_results[[4]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=4),   data.frame(case_results[[5]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=5),   data.frame(case_results[[6]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=6),   data.frame(case_results[[7]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=7),   data.frame(case_results[[8]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=8),   data.frame(case_results[[9]])  %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=9),   data.frame(case_results[[10]]) %>% select(TOTAL, FSBAC=2, SSBAC=3, TSBAC=4) %>% mutate(iter=10)   ) %>%   knitr::kable(format = \"html\") calc <- case_results[[1]]   for(i in 2:10) {     calc <- calc %>% bind_cols(case_results[[i]] %>% select(-TOTAL))   }  calc <-   calc %>%   rowwise() %>%   mutate(     SBAC0 = round(mean(c_across(starts_with(\"FSBAC\")), na.rm = TRUE)), # BAC 0.00     SBAC1 = round(mean(c_across(starts_with(\"SSBAC\")), na.rm = TRUE)), # BAC 0.01-0.07     SBAC2 = round(mean(c_across(starts_with(\"TSBAC\")), na.rm = TRUE))  # BAC 0.08+   ) %>%   ungroup() select(calc, SBAC0:SBAC2) %>% knitr::kable(format = \"html\") x <-   myFARS$flat %>%    select(year:per_no, age, sex, per_typ, inj_sev, alc_res, dr_drink, a1:a10) %>%   filter(inj_sev == \"Fatal Injury (K)\") %>%   mutate_at(paste0(\"a\", 1:10), function(x) 1*(x>=8)) %>%   group_by(year) %>%   summarize_at(paste0(\"a\", 1:10), sum, na.rm=T) %>%   rowwise() %>%   mutate(a = round(mean(c_across(a1:a10))))   x$a ## [1] 12429"},{"path":"https://s87jackson.github.io/rfars/articles/Counts.html","id":"counts","dir":"Articles","previous_headings":"","what":"Counts","title":"Counts","text":"first step many transportation safety analyses involves counting number relevant crashes, fatalities, people involved. counts() lets users specify count, count (rural/urban /specified states regions), include, interval count (annually monthly), factors involved crashes. returns simple tibble can easily piped ggplot() quickly visualize counts. First load required libraries:","code":"library(dplyr) library(ggplot2) ## Warning: package 'ggplot2' was built under R version 4.4.3 library(tidyr) library(rfars)"},{"path":"https://s87jackson.github.io/rfars/articles/Counts.html","id":"annual_counts","dir":"Articles","previous_headings":"Counts","what":"annual_counts","title":"Counts","text":"rfars includes annual_counts, table annual crash counts:","code":"rfars::annual_counts %>%   filter(what == \"crashes\", involved == \"any\") %>%   ggplot(aes(x=year, y=n)) +   geom_col() +   facet_wrap(.~source, nrow=1, scales = \"free_y\") +   labs(title = \"Total annual crashes by type (FARS = fatal, CRSS = general)\", x=NULL, y=NULL) +   theme_minimal() rfars::annual_counts %>%   filter(source==\"FARS\", involved != \"any\") %>%   ggplot(aes(x=year, y=n)) +   geom_col() +   facet_wrap(.~involved, scales = \"free_y\") +   labs(title = \"Annual fatal crashes by factor involved\", subtitle = \"Derived from FARS data files\", x=NULL, y=NULL) +   theme_minimal() +   theme(plot.title.position = \"plot\") rfars::annual_counts %>%   filter(source==\"CRSS\", involved != \"any\") %>%   ggplot(aes(x=year, y=n)) +   geom_col() +   facet_wrap(.~involved, scales = \"free_y\") +   labs(title = \"Annual crashes of all severity levels by factor involved\", subtitle = \"Derived from CRSS data files\", x=NULL, y=NULL) +   theme_minimal() +   theme(plot.title.position = \"plot\")"},{"path":"https://s87jackson.github.io/rfars/articles/Counts.html","id":"generating-custom-counts","dir":"Articles","previous_headings":"Counts","what":"Generating Custom Counts","title":"Counts","text":"can use get_fars() counts() generate variety custom counts. pull two years data: can use counts() get monthly number crashes Virginia: returns following dataframe: can graph:   alternatively count annual fatalities: fatalities involving speeding: fatalities involving speeding rural areas: can use involved = ‘’ see problems one state:","code":"myFARS <- get_fars(years = c(2022, 2023), proceed = T) my_counts <- counts(   df = myFARS,   where = list(states = \"VA\"),   what = \"crashes\",   interval = c(\"year\", \"month\")   ) knitr::kable(my_counts, format = \"html\") my_counts %>%   mutate_at(\"year\", factor) %>%   ggplot(aes(x=month, y=n, group=year, color=year, label=scales::comma(n))) +   geom_line(linewidth = 1.5) +    labs(x=NULL, y=NULL, title = \"Fatal Crashes in Virginia\") +   theme_minimal() +   theme(plot.title.position = \"plot\") my_counts %>%   mutate(date = lubridate::make_date(year, month)) %>%   ggplot(aes(x=date, y=n, label=scales::comma(n))) +   geom_col() +    labs(x=NULL, y=NULL, title = \"Fatal Crashes in Virginia\")  +   theme(plot.title.position = \"plot\") counts(   myFARS,   where = list(states = \"VA\"),   what = \"fatalities\",   interval = c(\"year\")   ) %>%   knitr::kable(format = \"html\") counts(   df = myFARS,   where = list(states = \"VA\"),   what = \"fatalities\",   interval = c(\"year\"),   involved = \"speeding\" ) %>%   knitr::kable(format = \"html\") counts(   myFARS,   where = list(states = \"VA\", urb=\"rural\"),   what = \"fatalities\",   interval = c(\"year\"),   involved = \"speeding\" ) %>%   knitr::kable(format = \"html\") counts(   df = myFARS,   where = list(states = \"VA\"),   what = \"crashes\",   interval = \"year\",   involved = \"each\" ) %>%   pivot_wider(names_from = \"year\", values_from = \"n\") %>%   arrange(desc(`2023`)) %>%   knitr::kable(format = \"html\") ## Note: rfars::counts() uses the variables alc_res and dr_drink to determine alcohol involvement. NHTSA reports counts using multiple imputation to estimate missing BAC values. See vignette('Alcohol Counts', package = 'rfars') for more information."},{"path":"https://s87jackson.github.io/rfars/articles/Counts.html","id":"comparing-counts","dir":"Articles","previous_headings":"Counts","what":"Comparing Counts","title":"Counts","text":"can use compare_counts() quickly produce comparison graphs. compare speeding-related fatalities rural urban areas:  compare speeding-related crashes related distraction:","code":"compare_counts(   df = myFARS,   interval = \"year\",   involved = \"speeding\",   what = \"fatalities\",   where = list(states = \"VA\", urb=\"rural\"),   where2 = list(states = \"VA\", urb=\"urban\")   ) %>%   ggplot(aes(x=factor(year), y=n, label=scales::comma(n))) +      geom_col() +      geom_label(vjust=1.2) +     facet_wrap(.~urb) +     labs(x=NULL, y=NULL, title = \"Speeding-Related Fatalities in Virginia\", fill=NULL) compare_counts(   df = myFARS,   where = list(states = \"VA\"),   interval = \"year\",   involved = \"speeding\",   involved2 = \"distracted driver\",   what = \"crashes\",   ) %>%   ggplot(aes(x=factor(year), y=n, label=scales::comma(n))) +      geom_col() +      geom_label(vjust=1.2) +     facet_wrap(.~involved) +     labs(x=NULL, y=NULL, title = \"Speeding- and Distraction-Related Crashes in Virginia\", fill=NULL)"},{"path":"https://s87jackson.github.io/rfars/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steve Jackson. Author, maintainer.","code":""},{"path":"https://s87jackson.github.io/rfars/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jackson S (2025). rfars: Download Analyze Crash Data. R package version 2.0.0, https://s87jackson.github.io/rfars/, https://github.com/s87jackson/rfars.","code":"@Manual{,   title = {rfars: Download and Analyze Crash Data},   author = {Steve Jackson},   year = {2025},   note = {R package version 2.0.0, https://s87jackson.github.io/rfars/},   url = {https://github.com/s87jackson/rfars}, }"},{"path":"https://s87jackson.github.io/rfars/index.html","id":"rfars-","dir":"","previous_headings":"","what":"Download and Analyze Crash Data","title":"Download and Analyze Crash Data","text":"goal rfars facilitate transportation safety analysis simplifying process extracting data official crash databases. National Highway Traffic Safety Administration collects publishes census fatal crashes Fatality Analysis Reporting System sample fatal non-fatal crashes Crash Report Sampling System (evolution General Estimates System). Fatality Injury Reporting System Tool allows users query databases, can produce simple tables graphs. suffices simple analysis, often leaves researchers wanting . Digging deeper, however, involves time-consuming process downloading annual ZIP files attempting stitch together - first combing immense data dictionaries determine required variables table names. rfars allows users download last 10 years FARS GES/CRSS data just one line code. result full, rich dataset ready mapping, modeling, downstream analysis. Codebooks variable definitions value labels support informed analysis data (see vignette(\"Searchable Codebooks\", package = \"rfars\") information). Helper functions also provided produce common counts comparisons.","code":""},{"path":"https://s87jackson.github.io/rfars/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download and Analyze Crash Data","text":"can install latest version rfars GitHub : CRAN stable release : load rfars helpful packages:","code":"# install.packages(\"devtools\") devtools::install_github(\"s87jackson/rfars\") install.packages(\"rfars\") library(rfars) library(dplyr)"},{"path":"https://s87jackson.github.io/rfars/index.html","id":"getting-and-using-data","dir":"","previous_headings":"","what":"Getting and Using Data","title":"Download and Analyze Crash Data","text":"get_fars() get_gescrss() primary functions rfars package. functions download process data files directly NHTSA’s FTP Site, pull prepared data stored local machine. take parameters years states (FARS) regions (GES/CRSS). source data files follow annual structure, years determines many file sets downloaded loaded, states/regions filters resulting dataset. Downloading processing files can take several minutes. downloading, rfars inform ’s download files asks permission . skip dialog, set proceed = TRUE. can use dir cache parameters save RDS file local machine. dir parameter specifies directory, cache names file (sure include .rds file extension). get one year FARS data: saved file locally : Note can assign save data one function call. similarly get one year CRSS data: get_fars() get_gescrss() return list six tibbles: flat, multi_acc, multi_veh, multi_per, events, codebook. row flat tibble corresponds person involved crash. may multiple people /vehicles involved one crash, variable-values repeated within crash vehicle. crash uniquely identified id, combination year st_case. Note st_case unique across years, example, st_case 510001 appear year. id variable attempts avoid issue. multi_ tibbles contain variables may varying number values entity (e.g., driver impairments, vehicle events, weather conditions time crash). tibble requisite data elements corresponding entity: multi_acc includes st_case year, multi_veh adds veh_no (vehicle number), multi_per adds per_no (person number). top name-value pairs tibble shown . Top Name-Value Pairs multi_acc Object Top Name-Value Pairs multi_veh Object Top Name-Value Pairs multi_per Object events tibble provides sequence numbered events vehicle crash. See vignette(“Crash Sequence Events”, package = “rfars”) information. Preview events Object codebook tibble provides searchable codebook data, useful know concept ’re looking variable describes . rfars also includes pre-loaded codebooks FARS GESCRSS (rfars::fars_codebook rfars::gescrss_codebook). tables span 2014-2023 whereas codebook object returned get_fars() get_gescrss() include specified years. See vignette('Searchable Codebooks', package = 'rfars') information.","code":"myFARS <- get_fars(years = 2023, proceed = TRUE) #> ✓ 2023 data downloaded #> Accident file: #>   |                                                                              |                                                                      |   0%  |                                                                              |==                                                                    |   2%  |                                                                              |===                                                                   |   4%  |                                                                              |=====                                                                 |   7%  |                                                                              |======                                                                |   9%  |                                                                              |========                                                              |  11%  |                                                                              |=========                                                             |  13%  |                                                                              |===========                                                           |  16%  |                                                                              |============                                                          |  18%  |                                                                              |==============                                                        |  20%  |                                                                              |================                                                      |  22%  |                                                                              |=================                                                     |  24%  |                                                                              |===================                                                   |  27%  |                                                                              |====================                                                  |  29%  |                                                                              |======================                                                |  31%  |                                                                              |=======================                                               |  33%  |                                                                              |=========================                                             |  36%  |                                                                              |==========================                                            |  38%  |                                                                              |============================                                          |  40%  |                                                                              |==============================                                        |  42%  |                                                                              |===============================                                       |  44%  |                                                                              |=================================                                     |  47%  |                                                                              |==================================                                    |  49%  |                                                                              |====================================                                  |  51%  |                                                                              |=====================================                                 |  53%  |                                                                              |=======================================                               |  56%  |                                                                              |========================================                              |  58%  |                                                                              |==========================================                            |  60%  |                                                                              |============================================                          |  62%  |                                                                              |=============================================                         |  64%  |                                                                              |===============================================                       |  67%  |                                                                              |================================================                      |  69%  |                                                                              |==================================================                    |  71%  |                                                                              |===================================================                   |  73%  |                                                                              |=====================================================                 |  76%  |                                                                              |======================================================                |  78%  |                                                                              |========================================================              |  80%  |                                                                              |==========================================================            |  82%  |                                                                              |===========================================================           |  84%  |                                                                              |=============================================================         |  87%  |                                                                              |==============================================================        |  89%  |                                                                              |================================================================      |  91%  |                                                                              |=================================================================     |  93%  |                                                                              |===================================================================   |  96%  |                                                                              |====================================================================  |  98%  |                                                                              |======================================================================| 100% #> Vehicle file: #>   |                                                                              |                                                                      |   0%  |                                                                              |=                                                                     |   1%  |                                                                              |==                                                                    |   2%  |                                                                              |==                                                                    |   3%  |                                                                              |===                                                                   |   4%  |                                                                              |====                                                                  |   6%  |                                                                              |=====                                                                 |   7%  |                                                                              |======                                                                |   8%  |                                                                              |======                                                                |   9%  |                                                                              |=======                                                               |  10%  |                                                                              |========                                                              |  11%  |                                                                              |=========                                                             |  12%  |                                                                              |=========                                                             |  13%  |                                                                              |==========                                                            |  15%  |                                                                              |===========                                                           |  16%  |                                                                              |============                                                          |  17%  |                                                                              |=============                                                         |  18%  |                                                                              |=============                                                         |  19%  |                                                                              |==============                                                        |  20%  |                                                                              |===============                                                       |  21%  |                                                                              |================                                                      |  22%  |                                                                              |=================                                                     |  24%  |                                                                              |=================                                                     |  25%  |                                                                              |==================                                                    |  26%  |                                                                              |===================                                                   |  27%  |                                                                              |====================                                                  |  28%  |                                                                              |====================                                                  |  29%  |                                                                              |=====================                                                 |  30%  |                                                                              |======================                                                |  31%  |                                                                              |=======================                                               |  33%  |                                                                              |========================                                              |  34%  |                                                                              |========================                                              |  35%  |                                                                              |=========================                                             |  36%  |                                                                              |==========================                                            |  37%  |                                                                              |===========================                                           |  38%  |                                                                              |============================                                          |  39%  |                                                                              |============================                                          |  40%  |                                                                              |=============================                                         |  42%  |                                                                              |==============================                                        |  43%  |                                                                              |===============================                                       |  44%  |                                                                              |===============================                                       |  45%  |                                                                              |================================                                      |  46%  |                                                                              |=================================                                     |  47%  |                                                                              |==================================                                    |  48%  |                                                                              |===================================                                   |  49%  |                                                                              |===================================                                   |  51%  |                                                                              |====================================                                  |  52%  |                                                                              |=====================================                                 |  53%  |                                                                              |======================================                                |  54%  |                                                                              |=======================================                               |  55%  |                                                                              |=======================================                               |  56%  |                                                                              |========================================                              |  57%  |                                                                              |=========================================                             |  58%  |                                                                              |==========================================                            |  60%  |                                                                              |==========================================                            |  61%  |                                                                              |===========================================                           |  62%  |                                                                              |============================================                          |  63%  |                                                                              |=============================================                         |  64%  |                                                                              |==============================================                        |  65%  |                                                                              |==============================================                        |  66%  |                                                                              |===============================================                       |  67%  |                                                                              |================================================                      |  69%  |                                                                              |=================================================                     |  70%  |                                                                              |==================================================                    |  71%  |                                                                              |==================================================                    |  72%  |                                                                              |===================================================                   |  73%  |                                                                              |====================================================                  |  74%  |                                                                              |=====================================================                 |  75%  |                                                                              |=====================================================                 |  76%  |                                                                              |======================================================                |  78%  |                                                                              |=======================================================               |  79%  |                                                                              |========================================================              |  80%  |                                                                              |=========================================================             |  81%  |                                                                              |=========================================================             |  82%  |                                                                              |==========================================================            |  83%  |                                                                              |===========================================================           |  84%  |                                                                              |============================================================          |  85%  |                                                                              |=============================================================         |  87%  |                                                                              |=============================================================         |  88%  |                                                                              |==============================================================        |  89%  |                                                                              |===============================================================       |  90%  |                                                                              |================================================================      |  91%  |                                                                              |================================================================      |  92%  |                                                                              |=================================================================     |  93%  |                                                                              |==================================================================    |  94%  |                                                                              |===================================================================   |  96%  |                                                                              |====================================================================  |  97%  |                                                                              |====================================================================  |  98%  |                                                                              |===================================================================== |  99%  |                                                                              |======================================================================| 100% #> Person file: #>   |                                                                              |                                                                      |   0%  |                                                                              |==                                                                    |   3%  |                                                                              |====                                                                  |   5%  |                                                                              |======                                                                |   8%  |                                                                              |========                                                              |  11%  |                                                                              |=========                                                             |  14%  |                                                                              |===========                                                           |  16%  |                                                                              |=============                                                         |  19%  |                                                                              |===============                                                       |  22%  |                                                                              |=================                                                     |  24%  |                                                                              |===================                                                   |  27%  |                                                                              |=====================                                                 |  30%  |                                                                              |=======================                                               |  32%  |                                                                              |=========================                                             |  35%  |                                                                              |==========================                                            |  38%  |                                                                              |============================                                          |  41%  |                                                                              |==============================                                        |  43%  |                                                                              |================================                                      |  46%  |                                                                              |==================================                                    |  49%  |                                                                              |====================================                                  |  51%  |                                                                              |======================================                                |  54%  |                                                                              |========================================                              |  57%  |                                                                              |==========================================                            |  59%  |                                                                              |============================================                          |  62%  |                                                                              |=============================================                         |  65%  |                                                                              |===============================================                       |  68%  |                                                                              |=================================================                     |  70%  |                                                                              |===================================================                   |  73%  |                                                                              |=====================================================                 |  76%  |                                                                              |=======================================================               |  78%  |                                                                              |=========================================================             |  81%  |                                                                              |===========================================================           |  84%  |                                                                              |=============================================================         |  86%  |                                                                              |==============================================================        |  89%  |                                                                              |================================================================      |  92%  |                                                                              |==================================================================    |  95%  |                                                                              |====================================================================  |  97%  |                                                                              |======================================================================| 100% #> Multiple Imputation Driver BAC by Crash file: #>   |                                                                              |                                                                      |   0%  |                                                                              |========                                                              |  11%  |                                                                              |================                                                      |  22%  |                                                                              |=======================                                               |  33%  |                                                                              |===============================                                       |  44%  |                                                                              |=======================================                               |  56%  |                                                                              |===============================================                       |  67%  |                                                                              |======================================================                |  78%  |                                                                              |==============================================================        |  89%  |                                                                              |======================================================================| 100% #> Weather file(s): #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% #> Crash risk factors: #>   |                                                                              |                                                                      |   0%  |                                                                              |======================================================================| 100% #> vsoe file: #>   |                                                                              |                                                                      |   0%  |                                                                              |==================                                                    |  25%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================================                  |  75%  |                                                                              |======================================================================| 100% #> distract file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> drimpair file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> factor file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> maneuver file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> violatn file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> vision file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> damage file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> vehiclesf file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> pvehiclesf file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> driverrf file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================================================| 100% #> PBtype file: #>   |                                                                              |                                                                      |   0%  |                                                                              |===                                                                   |   5%  |                                                                              |======                                                                |   9%  |                                                                              |==========                                                            |  14%  |                                                                              |=============                                                         |  18%  |                                                                              |================                                                      |  23%  |                                                                              |===================                                                   |  27%  |                                                                              |======================                                                |  32%  |                                                                              |=========================                                             |  36%  |                                                                              |=============================                                         |  41%  |                                                                              |================================                                      |  45%  |                                                                              |===================================                                   |  50%  |                                                                              |======================================                                |  55%  |                                                                              |=========================================                             |  59%  |                                                                              |=============================================                         |  64%  |                                                                              |================================================                      |  68%  |                                                                              |===================================================                   |  73%  |                                                                              |======================================================                |  77%  |                                                                              |=========================================================             |  82%  |                                                                              |============================================================          |  86%  |                                                                              |================================================================      |  91%  |                                                                              |===================================================================   |  95%  |                                                                              |======================================================================| 100% #> SafetyEq file: #>   |                                                                              |                                                                      |   0%  |                                                                              |=========                                                             |  12%  |                                                                              |==================                                                    |  25%  |                                                                              |==========================                                            |  38%  |                                                                              |===================================                                   |  50%  |                                                                              |============================================                          |  62%  |                                                                              |====================================================                  |  75%  |                                                                              |=============================================================         |  88%  |                                                                              |======================================================================| 100% #> Multiple Imputation Person BAC file: #>   |                                                                              |                                                                      |   0%  |                                                                              |======                                                                |   9%  |                                                                              |=============                                                         |  18%  |                                                                              |===================                                                   |  27%  |                                                                              |=========================                                             |  36%  |                                                                              |================================                                      |  45%  |                                                                              |======================================                                |  55%  |                                                                              |=============================================                         |  64%  |                                                                              |===================================================                   |  73%  |                                                                              |=========================================================             |  82%  |                                                                              |================================================================      |  91%  |                                                                              |======================================================================| 100% #> nmcrash file: #>   |                                                                              |                                                                      |   0%  |                                                                              |=======================                                               |  33%  |                                                                              |===============================================                       |  67%  |                                                                              |======================================================================| 100% #> nmimpair file: #>   |                                                                              |                                                                      |   0%  |                                                                              |=======================                                               |  33%  |                                                                              |===============================================                       |  67%  |                                                                              |======================================================================| 100% #> nmprior file: #>   |                                                                              |                                                                      |   0%  |                                                                              |=======================                                               |  33%  |                                                                              |===============================================                       |  67%  |                                                                              |======================================================================| 100% #> nmdistract file: #>   |                                                                              |                                                                      |   0%  |                                                                              |=======================                                               |  33%  |                                                                              |===============================================                       |  67%  |                                                                              |======================================================================| 100% #> drugs file: #>   |                                                                              |                                                                      |   0%  |                                                                              |=========                                                             |  12%  |                                                                              |==================                                                    |  25%  |                                                                              |==========================                                            |  38%  |                                                                              |===================================                                   |  50%  |                                                                              |============================================                          |  62%  |                                                                              |====================================================                  |  75%  |                                                                              |=============================================================         |  88%  |                                                                              |======================================================================| 100% #> race file: #>   |                                                                              |                                                                      |   0%  |                                                                              |==============                                                        |  20%  |                                                                              |============================                                          |  40%  |                                                                              |==========================================                            |  60%  |                                                                              |========================================================              |  80%  |                                                                              |======================================================================| 100% #> personrf file: #>   |                                                                              |                                                                      |   0%  |                                                                              |=======================                                               |  33%  |                                                                              |===============================================                       |  67%  |                                                                              |======================================================================| 100% #> ✓ Flat file constructed #> ✓ Multi_acc file constructed #> ✓ Multi_veh file constructed #> ✓ Multi_per file constructed #> ✓ SOE file constructed #> ✓ Prepared files saved in C:/Users/STEVEJ~1/AppData/Local/Temp/Rtmpk5gY1z/FARS data/prepd/2023 #> ✓ Codebook file saved in C:/Users/STEVEJ~1/AppData/Local/Temp/Rtmpk5gY1z/FARS data/prepd/ myFARS <- get_fars(years=2023, proceed = TRUE, dir = getwd(), cache = \"myFARS.rds\") myCRSS <- get_gescrss(years = 2023, proceed = TRUE) glimpse(myFARS$flat, width = 100) #> Rows: 92,400 #> Columns: 217 #> $ year          <dbl> 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023… #> $ state         <fct> Alabama, Alabama, Alabama, Alabama, Alabama, Alabama, Alabama, Alabama, Alab… #> $ st_case       <dbl> 10001, 10002, 10003, 10004, 10004, 10004, 10005, 10005, 10005, 10005, 10006,… #> $ id            <dbl> 202310001, 202310002, 202310003, 202310004, 202310004, 202310004, 202310005,… #> $ veh_no        <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2… #> $ per_no        <dbl> 1, 1, 1, 1, 2, 3, 1, 2, 3, 4, 1, 1, 1, 1, 2, 1, 2, 3, 1, 1, 2, 3, 1, 1, 1, 1… #> $ county        <dbl> 13, 97, 89, 53, 53, 53, 3, 3, 3, 3, 121, 95, 95, 123, 123, 119, 119, 119, 85… #> $ city          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ lon           <dbl> -86.53883, -88.27321, -86.37583, -86.74669, -86.74669, -86.74669, -87.64380,… #> $ lat           <dbl> 31.92797, 30.50874, 34.73833, 31.01478, 31.01478, 31.01478, 31.02741, 31.027… #> $ acc_config    <fct> \"Single Driver-Right Roadside Departure\", \"Single Driver-Left Roadside Depar… #> $ acc_type      <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"G50-Same Trafficway, Opposite D… #> $ age           <fct> 33 Years, 32 Years, 21 Years, 54 Years, 53 Years, 36 Years, 54 Years, 60 Yea… #> $ air_bag       <fct> \"Deployed- Front\", \"Deployed- Front\", \"Deployed- Front\", \"Deployed- Combinat… #> $ alc_res       <fct> \"Test Not Given\", \"0.217 % BAC\", \"0.148 % BAC\", \"0.117 % BAC\", \"Test Not Giv… #> $ alc_status    <fct> Test Not Given, Test Given, Test Given, Test Given, Test Not Given, Test Giv… #> $ arr_hour      <fct> 10:00pm-10:59pm, 2:00am-2:59am, 11:00pm-11:59pm, 7:00pm-7:59pm, 7:00pm-7:59p… #> $ arr_min       <fct> 45, 23, 8, 44, 44, 44, 8, 8, 8, 8, 33, 48, 48, 22, 22, 1, 1, 1, 59, 59, 59, … #> $ atst_typ      <fct> \"Test Not Given\", \"Blood\", \"Blood\", \"Blood\", \"Test Not Given\", \"Vitreous\", \"… #> $ bikecgp       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ bikectype     <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ bikedir       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ bikeloc       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ bikepos       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ body_typ      <fct> \"Compact Utility (Utility Vehicle Categories \\\"Small\\\" and \\\"Midsize\\\")\", \"5… #> $ bus_use       <fct> \"Not a Bus\", \"Not a Bus\", \"Not a Bus\", \"Not a Bus\", \"Not a Bus\", \"Not a Bus\"… #> $ cargo_bt      <fct> Not Applicable (N/A), Not Applicable (N/A), Not Applicable (N/A), Not Applic… #> $ cdl_stat      <fct> No (CDL), No (CDL), No (CDL), No (CDL), No (CDL), No (CDL), No (CDL), No (CD… #> $ cityname      <chr> \"NOT APPLICABLE\", \"NOT APPLICABLE\", \"NOT APPLICABLE\", \"NOT APPLICABLE\", \"NOT… #> $ countyname    <chr> \"BUTLER (13)\", \"MOBILE (97)\", \"MADISON (89)\", \"ESCAMBIA (53)\", \"ESCAMBIA (53… #> $ day           <dbl> 4, 20, 18, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 15, 15, 11, 11, 11, 12, 1… #> $ day_week      <fct> Wednesday, Monday, Saturday, Friday, Friday, Friday, Friday, Friday, Friday,… #> $ death_da      <fct> 4, 20, 18, Not Applicable (Non-Fatal), Not Applicable (Non-Fatal), 17, 17, N… #> $ death_hr      <fct> 22:00-22:59, 2:00-2:59, 22:00-22:59, Not Applicable (Non-fatal), Not Applica… #> $ death_mn      <fct> 20, 0, 56, Not Applicable (Non-fatal), Not Applicable (Non-fatal), 0, 55, No… #> $ death_mo      <fct> January, March, March, Not Applicable (Non-Fatal), Not Applicable (Non-Fatal… #> $ death_tm      <fct> NA, NA, NA, Not Applicable (Non-fatal), Not Applicable (Non-fatal), NA, NA, … #> $ death_yr      <fct> 2023, 2023, 2023, Not Applicable (Non-fatal), Not Applicable (Non-fatal), 20… #> $ deaths        <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 0… #> $ deformed      <fct> \"Disabling Damage\", \"Disabling Damage\", \"Disabling Damage\", \"Disabling Damag… #> $ devmotor      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ devtype       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ doa           <fct> Died at Scene, Died at Scene, Died at Scene, Not Applicable, Not Applicable,… #> $ dr_drink      <fct> No, Yes, Yes, Yes, Yes, Yes, No, No, No, No, No, No, No, No, No, Yes, Yes, Y… #> $ dr_hgt        <fct> Unknown, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ dr_pres       <fct> Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Y… #> $ dr_wgt        <fct> Unknown, 190 lbs., 130 lbs., 250 lbs., 250 lbs., 250 lbs., 287 lbs., 287 lbs… #> $ dr_zip        <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ drinking      <fct> No (Alcohol Not Involved), Yes (Alcohol Involved), No (Alcohol Not Involved)… #> $ drugs         <fct> No (drugs not involved), Reported as Unknown, No (drugs not involved), No (d… #> $ dstatus       <fct> Test Not Given, Test Given, Test Given, Test Given, Test Not Given, Test Giv… #> $ ej_path       <fct> \"Ejection Path Not Applicable\", \"Ejection Path Not Applicable\", \"Ejection Pa… #> $ ejection      <fct> Not Ejected, Not Ejected, Not Ejected, Not Ejected, Not Ejected, Totally Eje… #> $ emer_use      <fct> \"Not Applicable\", \"Not Applicable\", \"Not Applicable\", \"Not Applicable\", \"Not… #> $ extricat      <fct> Not Extricated or Not Applicable, Not Extricated or Not Applicable, Not Extr… #> $ fatals        <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1… #> $ fire_exp      <fct> No or Not Reported, No or Not Reported, No or Not Reported, No or Not Report… #> $ first_mo      <fct> November, No Record, No Record, July, July, July, No Record, No Record, No R… #> $ first_yr      <fct> 2022, No Record, No Record, 2020, 2020, 2020, No Record, No Record, No Recor… #> $ func_sys      <fct> Major Collector, Local, Major Collector, Local, Local, Local, Interstate, In… #> $ gvwr_from     <fct> \"Class 1: 6,000 lbs. or less (2,722 kg or less)\", \"Class 1: 6,000 lbs. or le… #> $ gvwr_to       <fct> \"Class 1: 6,000 lbs. or less (2,722 kg or less)\", \"Class 1: 6,000 lbs. or le… #> $ harm_ev       <fct> \"Rollover/Overturn\", \"Tree (Standing Only)\", \"Embankment\", \"Live Animal\", \"L… #> $ haz_cno       <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ haz_id        <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ haz_inv       <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, … #> $ haz_plac      <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ haz_rel       <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ helm_mis      <fct> \"None Used/Not Applicable\", \"None Used/Not Applicable\", \"None Used/Not Appli… #> $ helm_use      <fct> \"Not Applicable\", \"Not Applicable\", \"Not Applicable\", \"Not Applicable\", \"Not… #> $ hispanic      <fct> \"Non-Hispanic\", \"Non-Hispanic\", \"Non-Hispanic\", \"Not A Fatality (not Applica… #> $ hit_run       <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, … #> $ hosp_hr       <fct> Not Applicable (Not Transported), Not Applicable (Not Transported), Not Appl… #> $ hosp_mn       <fct> Not Applicable (Not Transported), Not Applicable (Not Transported), Not Appl… #> $ hospital      <fct> Not Transported for Treatment, Not Transported for Treatment, Not Transporte… #> $ hour          <fct> 10:00pm-10:59pm, 2:00am-2:59am, 10:00pm-10:59pm, 7:00pm-7:59pm, 7:00pm-7:59p… #> $ icfinalbody   <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ impact1       <fct> \"Non-Collision\", \"12 Clock Point\", \"12 Clock Point\", \"Not Reported\", \"Not Re… #> $ inj_sev       <fct> \"Fatal Injury (K)\", \"Fatal Injury (K)\", \"Fatal Injury (K)\", \"Suspected Serio… #> $ j_knife       <fct> Not an Articulated Vehicle, Not an Articulated Vehicle, Not an Articulated V… #> $ l_compl       <fct> Valid license for this class vehicle, Valid license for this class vehicle, … #> $ l_endors      <fct> \"No Endorsements required for this vehicle\", \"No Endorsements required for t… #> $ l_restri      <fct> \"No Restrictions or Not Applicable\", \"No Restrictions or Not Applicable\", \"R… #> $ l_state       <fct> Georgia, Alabama, Alabama, Iowa, Iowa, Iowa, Alabama, Alabama, Alabama, Alab… #> $ l_status      <fct> Valid, Valid, Valid, Valid, Valid, Valid, Not licensed, Not licensed, Not li… #> $ l_type        <fct> Full Driver License, Full Driver License, Full Driver License, Full Driver L… #> $ lag_hrs       <fct> NA, NA, NA, Unknown, Unknown, NA, NA, Unknown, Unknown, Unknown, NA, NA, NA,… #> $ lag_mins      <fct> NA, NA, NA, Unknown, Unknown, NA, NA, Unknown, Unknown, Unknown, NA, NA, NA,… #> $ last_mo       <fct> November, No Record, No Record, August, August, August, No Record, No Record… #> $ last_yr       <fct> 2022, No Record, No Record, 2020, 2020, 2020, No Record, No Record, No Recor… #> $ lgt_cond      <fct> Dark - Not Lighted, Dark - Not Lighted, Dark - Not Lighted, Dark - Not Light… #> $ location      <fct> \"Occupant of a Motor Vehicle\", \"Occupant of a Motor Vehicle\", \"Occupant of a… #> $ m_harm        <fct> \"Embankment\", \"Tree (Standing Only)\", \"Tree (Standing Only)\", \"Tree (Standin… #> $ mak_mod       <fct> \"Ford Bronco (thru 1977)/Bronco II/Explorer/Explorer Sport (Explorer for 199… #> $ make          <fct> Ford, Dodge, Toyota, Jeep / Kaiser-Jeep / Willys- Jeep, Jeep / Kaiser-Jeep /… #> $ man_coll      <fct> The First Harmful Event was Not a Collision with a Motor Vehicle in Transpor… #> $ mcarr_i1      <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ mcarr_i2      <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ mcarr_id      <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ milept        <fct> NA, None, None, None, None, None, NA, NA, NA, NA, None, None, None, NA, NA, … #> $ minute        <fct> 20, 0, 56, 0, 0, 0, 55, 55, 55, 55, 25, 25, 25, 12, 12, 30, 30, 30, 20, 20, … #> $ mod_year      <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ model         <dbl> 401, 25, 40, 1, 1, 1, 43, 43, 43, 43, 481, 482, 481, 481, 481, 31, 31, 31, 3… #> $ month         <fct> January, March, March, March, March, March, March, March, March, March, Marc… #> $ motdir        <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ motman        <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ nhs           <fct> This Section IS NOT on the NHS, This Section IS NOT on the NHS, This Section… #> $ nmhelmet      <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ nmlight       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ nmothpre      <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ nmothpro      <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ nmpropad      <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ nmrefclo      <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ not_hour      <fct> 10:00pm-10:59pm, 2:00am-2:59am, 10:00pm-10:59pm, 7:00pm-7:59pm, 7:00pm-7:59p… #> $ not_min       <fct> 20, 8, 48, 0, 0, 0, 53, 53, 53, 53, 18, 31, 31, 12, 12, 40, 40, 40, 18, 18, … #> $ numoccs       <fct> 01, 01, 01, 03, 03, 03, 04, 04, 04, 04, 01, 01, 01, 02, 02, 03, 03, 03, 01, … #> $ owner         <fct> \"Driver (in this crash) Not Registered Owner (Other Private Owner Listed)\", … #> $ p_crash1      <fct> Going Straight, Going Straight, Negotiating a Curve, Negotiating a Curve, Ne… #> $ p_crash2      <fct> \"Off the edge of the road on the right side\", \"Off the edge of the road on t… #> $ p_crash3      <fct> Steering left, Unknown/Not Reported, Unknown/Not Reported, Steering right, S… #> $ pbcwalk       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ pbswalk       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ pbszone       <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ pcrash4       <fct> \"Skidding laterally clockwise rotation\", \"Tracking\", \"Tracking\", \"Tracking\",… #> $ pcrash5       <fct> \"Departed roadway\", \"Departed roadway\", \"Departed roadway\", \"Departed roadwa… #> $ pedcgp        <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ pedctype      <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ peddir        <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ pedleg        <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ pedloc        <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ pedpos        <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ peds          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ pedsnr        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ per_typ       <fct> Driver of a Motor Vehicle In-Transport, Driver of a Motor Vehicle In-Transpo… #> $ permvit       <dbl> 1, 1, 1, 3, 3, 3, 4, 4, 4, 4, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 1, 1, 4, 4… #> $ pernotmvit    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ persons       <dbl> 1, 1, 1, 3, 3, 3, 4, 4, 4, 4, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 1, 1, 4, 4… #> $ prev_acc      <fct> None, None, None, 1, 1, 1, None, None, None, None, 4, None, None, 2, 2, None… #> $ prev_dwi      <fct> None, None, None, None, None, None, None, None, None, None, None, None, None… #> $ prev_oth      <fct> None, None, None, 1, 1, 1, None, None, None, None, None, None, None, None, N… #> $ prev_spd      <fct> 1, None, None, None, None, None, None, None, None, None, None, None, 1, 1, 1… #> $ prev_sus1     <fct> None, None, None, None, None, None, None, None, None, None, None, None, None… #> $ prev_sus2     <fct> None, None, None, None, None, None, None, None, None, None, None, None, None… #> $ prev_sus3     <fct> None, None, None, None, None, None, None, None, None, None, None, None, None… #> $ pvh_invl      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ rail          <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ rd_owner      <fct> \"State Highway Agency\", \"County Highway Agency\", \"County Highway Agency\", \"C… #> $ reg_stat      <fct> Alabama, Alabama, Alabama, Iowa, Iowa, Iowa, Alabama, Alabama, Alabama, Alab… #> $ rel_road      <fct> On Roadside, On Roadside, On Roadside, On Roadside, On Roadside, On Roadside… #> $ reljct1       <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, … #> $ reljct2       <fct> Non-Junction, Non-Junction, Non-Junction, Non-Junction, Non-Junction, Non-Ju… #> $ rest_mis      <fct> \"No Indication of Misuse\", \"None Used/Not Applicable\", \"None Used/Not Applic… #> $ rest_use      <fct> NA, None Used/Not Applicable, None Used/Not Applicable, NA, NA, None Used/No… #> $ rolinloc      <fct> On Roadside, No Rollover, No Rollover, No Rollover, No Rollover, No Rollover… #> $ rollover      <fct> Rollover, No Rollover, No Rollover, No Rollover, No Rollover, No Rollover, N… #> $ route         <fct> U.S. Highway, County, County, County, County, County, Interstate, Interstate… #> $ rur_urb       <fct> Rural, Rural, Rural, Rural, Rural, Rural, Rural, Rural, Rural, Rural, Rural,… #> $ sch_bus       <fct> No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, No, … #> $ seat_pos      <fct> \"Front Seat, Left Side\", \"Front Seat, Left Side\", \"Front Seat, Left Side\", \"… #> $ sex           <fct> Male, Female, Female, Male, Male, Male, Male, Male, Male, Female, Male, Male… #> $ sp_jur        <fct> No Special Jurisdiction, No Special Jurisdiction, No Special Jurisdiction, N… #> $ spec_use      <fct> \"No Special Use Noted\", \"No Special Use Noted\", \"No Special Use Noted\", \"No … #> $ speedrel      <fct> \"No\", \"No\", \"Yes, Exceeded Speed Limit\", \"Yes, Exceeded Speed Limit\", \"Yes, … #> $ statename     <fct> Alabama, Alabama, Alabama, Alabama, Alabama, Alabama, Alabama, Alabama, Alab… #> $ str_veh       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ tow_veh       <fct> \"No Trailers\", \"No Trailers\", \"No Trailers\", \"No Trailers\", \"No Trailers\", \"… #> $ towed         <fct> Towed, Towed, Towed, Towed, Towed, Towed, Towed, Towed, Towed, Towed, Towed,… #> $ trav_sp       <fct> 055 MPH, 065 MPH, 060 MPH, 060 MPH, 060 MPH, 060 MPH, 070 MPH, 070 MPH, 070 … #> $ trlr1gvwr     <fct> \"No Trailing Units\", \"No Trailing Units\", \"No Trailing Units\", \"No Trailing … #> $ trlr1vin      <fct> \"No Trailing Units\", \"No Trailing Units\", \"No Trailing Units\", \"No Trailing … #> $ trlr2gvwr     <fct> \"No Trailing Units\", \"No Trailing Units\", \"No Trailing Units\", \"No Trailing … #> $ trlr2vin      <fct> No Trailing Units, No Trailing Units, No Trailing Units, No Trailing Units, … #> $ trlr3gvwr     <fct> \"No Trailing Units\", \"No Trailing Units\", \"No Trailing Units\", \"No Trailing … #> $ trlr3vin      <fct> No Trailing Units, No Trailing Units, No Trailing Units, No Trailing Units, … #> $ tway_id       <chr> \"US-31 SR-3\", \"CR-BOE RD\", \"CR-GURLEY PIKE\", \"CR-ROCK CREEK RD\", \"CR-ROCK CR… #> $ tway_id2      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ typ_int       <fct> \"Not an Intersection\", \"Not an Intersection\", \"Not an Intersection\", \"Not an… #> $ underoverride <fct> Not Applicable, Not Applicable, Not Applicable, Not Applicable, Not Applicab… #> $ unittype      <fct> Motor Vehicle In-Transport (Inside or Outside the Trafficway), Motor Vehicle… #> $ v_config      <fct> \"Not Applicable\", \"Not Applicable\", \"Not Applicable\", \"Not Applicable\", \"Not… #> $ valign        <fct> Straight, Straight, Curve Right, Curve Left, Curve Left, Curve Left, Straigh… #> $ ve_forms      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2… #> $ ve_total      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2… #> $ vin           <fct> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ vnum_lan      <fct> Two lanes, Two lanes, Two lanes, Two lanes, Two lanes, Two lanes, Two lanes,… #> $ vpavetyp      <fct> \"Blacktop, Bituminous, or Asphalt\", \"Blacktop, Bituminous, or Asphalt\", \"Bla… #> $ vpicbodyclass <dbl> 7, 5, 13, 7, 7, 7, 13, 13, 13, 13, 60, 119, 60, 60, 60, 13, 13, 13, 7, 13, 1… #> $ vpicmake      <dbl> 460, 476, 448, 483, 483, 483, 448, 448, 448, 448, 472, 467, 467, 467, 467, 4… #> $ vpicmodel     <dbl> 1800, 1896, 2469, 1946, 1946, 1946, 2465, 2465, 2465, 2465, 1857, 3876, 1850… #> $ vprofile      <fct> \"Downhill\", \"Level\", \"Downhill\", \"Downhill\", \"Downhill\", \"Downhill\", \"Level\"… #> $ vspd_lim      <fct> 55 MPH, 45 MPH, 45 MPH, 35 MPH, 35 MPH, 35 MPH, 70 MPH, 70 MPH, 70 MPH, 70 M… #> $ vsurcond      <fct> \"Dry\", \"Dry\", \"Dry\", \"Dry\", \"Dry\", \"Dry\", \"Wet\", \"Wet\", \"Wet\", \"Wet\", \"Dry\",… #> $ vtcont_f      <fct> \"No Controls\", \"No Controls\", \"Not Reported\", \"Device Functioning Properly\",… #> $ vtrafcon      <fct> NA, NA, Not Reported, Other, Other, Other, NA, NA, NA, NA, NA, NA, NA, NA, N… #> $ vtrafway      <fct> \"Two-Way, Not Divided\", \"Two-Way, Not Divided\", \"Two-Way, Not Divided\", \"Two… #> $ work_inj      <fct> No, No, No, Not Applicable (not a fatality), Not Applicable (not a fatality)… #> $ wrk_zone      <fct> \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"Non… #> $ a1            <dbl> 21, 21, 14, 11, 11, 11, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, … #> $ a2            <dbl> 0, 21, 14, 11, 11, 11, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0… #> $ a3            <dbl> 0, 21, 14, 11, 11, 11, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0… #> $ a4            <dbl> 0, 21, 14, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0,… #> $ a5            <dbl> 13, 21, 14, 11, 11, 11, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, … #> $ a6            <dbl> 13, 21, 14, 11, 11, 11, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, … #> $ a7            <dbl> 0, 21, 14, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0,… #> $ a8            <dbl> 0, 21, 14, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0,… #> $ a9            <dbl> 0, 21, 14, 11, 11, 11, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0,… #> $ a10           <dbl> 0, 21, 14, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0,… #> $ p1            <dbl> 21, 21, 14, 11, NA, NA, 0, NA, NA, NA, 25, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA,… #> $ p2            <dbl> 0, 21, 14, 11, NA, NA, 0, NA, NA, NA, 25, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA, … #> $ p3            <dbl> 0, 21, 14, 11, NA, NA, 0, NA, NA, NA, 18, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA, … #> $ p4            <dbl> 0, 21, 14, 11, NA, NA, 0, NA, NA, NA, 0, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA, N… #> $ p5            <dbl> 13, 21, 14, 11, NA, NA, 0, NA, NA, NA, 25, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA,… #> $ p6            <dbl> 13, 21, 14, 11, NA, NA, 0, NA, NA, NA, 14, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA,… #> $ p7            <dbl> 0, 21, 14, 11, NA, NA, 0, NA, NA, NA, 0, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA, N… #> $ p8            <dbl> 0, 21, 14, 11, NA, NA, 0, NA, NA, NA, 0, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA, N… #> $ p9            <dbl> 0, 21, 14, 11, NA, NA, 0, NA, NA, NA, 8, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA, N… #> $ p10           <dbl> 0, 21, 14, 11, NA, NA, 0, NA, NA, NA, 0, 0, 0, 0, NA, 0, NA, NA, 5, 5, NA, N… myFARS$multi_acc %>%    filter(!is.na(value)) %>%    group_by(name, value) %>%    summarize(n=n(), .groups = \"drop\") %>%    arrange(desc(n)) %>% slice(1:10) %>%    select(name, value, n) %>%    knitr::kable(format = \"html\", caption = \"Top Name-Value Pairs for the multi_acc Object\") myFARS$multi_veh %>%    filter(!is.na(value)) %>%    group_by(name, value) %>%    summarize(n=n(), .groups = \"drop\") %>%    arrange(desc(n)) %>% slice(1:10) %>%    select(name, value, n) %>%    knitr::kable(format = \"html\", caption = \"Top Name-Value Pairs for the multi_veh Object\") myFARS$multi_per %>%    filter(!is.na(value)) %>%    group_by(name, value) %>%    summarize(n=n(), .groups = \"drop\") %>%    arrange(desc(n)) %>% slice(1:10) %>%    select(name, value, n) %>%    knitr::kable(format = \"html\", caption = \"Top Name-Value Pairs for the multi_per Object\") head(myFARS$events, 10) %>%    knitr::kable(format=\"html\", caption = \"Preview of events Object\")"},{"path":"https://s87jackson.github.io/rfars/index.html","id":"counts","dir":"","previous_headings":"","what":"Counts","title":"Download and Analyze Crash Data","text":"See vignette(\"Counts\", package = \"rfars\") information pre-loaded annual_counts dataframe counts() function. Also see vignette(\"Alcohol Counts\", package = \"rfars\") details BAC values imputed reported Traffic Safety Facts.","code":""},{"path":"https://s87jackson.github.io/rfars/index.html","id":"helpful-links","dir":"","previous_headings":"","what":"Helpful Links","title":"Download and Analyze Crash Data","text":"National Highway Traffic Safety Administration (NHTSA) Fatality Analysis Reporting System (FARS) Fatality Injury Reporting System Tool (FIRST) FARS Analytical User’s Manual General Estimates System (GES) Crash Report Sampling System (CRSS) CRSS Analytical User’s Manual NCSA Data Sources NHTSA FTP Site","code":""},{"path":"https://s87jackson.github.io/rfars/reference/alcohol.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving alcohol — alcohol","title":"(Internal) Find crashes involving alcohol — alcohol","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/alcohol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving alcohol — alcohol","text":"","code":"alcohol(df)"},{"path":"https://s87jackson.github.io/rfars/reference/alcohol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving alcohol — alcohol","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/annual_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Annual Crash Counts by Risk Factors — annual_counts","title":"Annual Crash Counts by Risk Factors — annual_counts","text":"Pre-computed annual crash counts FARS (fatal crashes) CRSS (general crash estimates) databases 2014-2023, broken various risk factors vulnerable road user categories.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/annual_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annual Crash Counts by Risk Factors — annual_counts","text":"","code":"annual_counts"},{"path":"https://s87jackson.github.io/rfars/reference/annual_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Annual Crash Counts by Risk Factors — annual_counts","text":"tibble 340 rows 9 variables: year Year (2014-2023) month Month, included interval, three-letter abbreviation ordered factor (Jan=1, Feb=2, etc.) Count unit - currently \"crashes\" states Geographic scope - \"\" national-level data region Regional scope - \"\" national-level data urb Urban/rural classification - \"\" combined data Person type - \"\" person types involved Risk factor crash type. Options include: \"\" crashes (general counts) \"\" factor listed , separately \"alcohol\" Alcohol-involved crashes \"bicyclist\" Crashes involving bicyclists \"distracted driver\" Distracted driving crashes \"drugs\" Drug-involved crashes \"hit run\" Hit--run crashes \"large trucks\" Large truck-involved crashes \"motorcycle\" Motorcycle crashes \"older driver\" Crashes involving older drivers \"pedalcyclist\" Crashes involving pedalcyclists \"pedbike\" Pedestrian bicyclist crashes combined \"pedestrian\" Pedestrian crashes \"police pursuit\" Police pursuit-related crashes \"roadway departure\" Roadway departure crashes \"rollover\" Rollover crashes \"speeding\" Speed-related crashes \"young driver\" Crashes involving young drivers  n Count crashes. FARS counts represent actual fatal crashes;             CRSS counts represent weighted estimates crashes","code":""},{"path":"https://s87jackson.github.io/rfars/reference/annual_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annual Crash Counts by Risk Factors — annual_counts","text":"dataset provides quick access national-level annual crash counts without needing download process full datasets. combines data two NHTSA databases: FARS Fatal crashes (actual counts) CRSS General crashes (weighted estimates) data can reproduced using counts() function downloaded FARS CRSS data involved = \"\" involved = \"\" parameters.","code":""},{"path":[]},{"path":"https://s87jackson.github.io/rfars/reference/annual_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annual Crash Counts by Risk Factors — annual_counts","text":"","code":"if (FALSE) { # \\dontrun{ # View total crashes over time by data source library(dplyr) library(ggplot2)  annual_counts %>%   filter(involved == \"any\") %>%   ggplot(aes(x = year, y = n, fill = source)) +   geom_col(position = \"dodge\") +   labs(title = \"Annual Crash Counts by Data Source\",        x = \"Year\", y = \"Number of Crashes\")  # Compare risk factor trends in fatal crashes annual_counts %>%   filter(source == \"FARS\",          involved %in% c(\"alcohol\", \"speeding\", \"distracted driver\")) %>%   ggplot(aes(x = year, y = n, color = involved)) +   geom_line() +   labs(title = \"Fatal Crash Trends by Risk Factor\",        x = \"Year\", y = \"Fatal Crashes\") } # }"},{"path":"https://s87jackson.github.io/rfars/reference/appendRDS.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Append RDS files — appendRDS","title":"(Internal) Append RDS files — appendRDS","text":"(Internal) Append RDS files","code":""},{"path":"https://s87jackson.github.io/rfars/reference/appendRDS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Append RDS files — appendRDS","text":"","code":"appendRDS(object, file, wd)"},{"path":"https://s87jackson.github.io/rfars/reference/appendRDS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Append RDS files — appendRDS","text":"object object save append file name file saved saved wd directory check","code":""},{"path":"https://s87jackson.github.io/rfars/reference/bicyclist.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving bicyclists — bicyclist","title":"(Internal) Find crashes involving bicyclists — bicyclist","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/bicyclist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving bicyclists — bicyclist","text":"","code":"bicyclist(df)"},{"path":"https://s87jackson.github.io/rfars/reference/bicyclist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving bicyclists — bicyclist","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/compare_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare counts — compare_counts","title":"Compare counts — compare_counts","text":"Compare counts generated counts()","code":""},{"path":"https://s87jackson.github.io/rfars/reference/compare_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare counts — compare_counts","text":"","code":"compare_counts(   df,   interval = c(\"year\", \"month\")[1],   what = c(\"crashes\", \"fatalities\", \"injuries\", \"people\")[1],   where = list(states = \"all\", region = c(\"all\", \"ne\", \"mw\", \"s\", \"w\")[1], urb = c(\"all\",     \"rural\", \"urban\")[1]),   who = c(\"all\", \"drivers\", \"passengers\", \"bicyclists\", \"pedestrians\")[1],   involved = NULL,   what2 = what,   where2 = where,   who2 = who,   involved2 = involved )"},{"path":"https://s87jackson.github.io/rfars/reference/compare_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare counts — compare_counts","text":"df input FARS object. interval interval count: months years. count: crashes, fatalities, people involved. count, list three elements: states (\"\" default), region (\"\"), urb (\"\") type person count: (default) drivers, passengers, pedestrians, bicyclists. involved Factors involved crash. Can : distracted driver, police pursuit, motorcycle, pedalcyclist, bicyclist, pedestrian, pedbike, young driver, older driver, speeding, alcohol, drugs, hit run, roadway departure, rollover, large trucks. what2 Comparison point '' (set '' unless specified). where2 Comparison point '' (set '' unless specified). who2 Comparison point '' (set '' unless specified). involved2 Comparison point 'involved' (set 'involved' unless specified).","code":""},{"path":"https://s87jackson.github.io/rfars/reference/compare_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare counts — compare_counts","text":"tibble counts.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/compare_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare counts — compare_counts","text":"","code":"if (FALSE) { # \\dontrun{     compare_counts(       get_fars(years = 2020, states=\"Virginia\"),       where = list(urb=\"rural\"),       where2 = list(urb=\"urban\")       )    } # }"},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate counts — counts","title":"Generate counts — counts","text":"Use FARS GES/CRSS data generate commonly requested counts.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate counts — counts","text":"","code":"counts(   df,   what = c(\"crashes\", \"fatalities\", \"injuries\", \"people\")[1],   interval = c(\"year\", \"month\")[1],   where = list(states = \"all\", region = c(\"all\", \"ne\", \"mw\", \"s\", \"w\")[1], urb = c(\"all\",     \"rural\", \"urban\")[1]),   who = c(\"all\", \"drivers\", \"passengers\", \"bicyclists\", \"pedestrians\")[1],   involved = c(\"any\", \"each\", \"alcohol\", \"bicyclist\", \"distracted driver\", \"drugs\",     \"hit and run\", \"large trucks\", \"motorcycle\", \"older driver\", \"pedalcyclist\",     \"pedbike\", \"pedestrian\", \"police pursuit\", \"roadway departure\", \"rollover\",     \"speeding\", \"young driver\")[1],   filterOnly = FALSE )"},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate counts — counts","text":"df input data object (must class 'FARS' 'GESCRSS' produced get_fars() get_gescrss()). count: crashes (default), fatalities, injuries, people involved. interval interval count: months years (default). count. Must list elements: states (can '', full abbreviated state names, FIPS codes), region ('', 'ne', 'mw', 's', 'w'; short northeast, midwest, south, west), urb ('', 'rural', 'urban'). un-specified elements set '' default. type person count: '' (default) 'drivers', 'passengers', 'pedestrians', 'bicyclists'. involved Factors involved crash: '' (default, produces general counts), '' (produces separate counts factor), 'distracted driver', 'police pursuit', 'motorcycle', 'pedalcyclist', 'bicyclist', 'pedestrian', 'pedbike', 'young driver', 'older driver', 'speeding','alcohol', 'drugs', 'hit run', 'roadway departure', 'rollover', 'large trucks'. filterOnly Logical, whether filter data reduce counts (FALSE default).","code":""},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate counts — counts","text":"Either filtered tibble (filterOnly=TRUE) tibble counts     (filterOnly=FALSE). filterOnly=TRUE, tibble returned     'flat' tibble input FARS object, filtered according     parameters. `df` GESCRSS object, counts returned sum appropriate weights.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate counts — counts","text":"","code":"if (FALSE) { # \\dontrun{     counts(get_fars(years = 2019), where = list(states=\"Virginia\", urb=\"rural\"))   } # }"},{"path":"https://s87jackson.github.io/rfars/reference/distracted_driver.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving distracted drivers — distracted_driver","title":"(Internal) Find crashes involving distracted drivers — distracted_driver","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/distracted_driver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving distracted drivers — distracted_driver","text":"","code":"distracted_driver(df)"},{"path":"https://s87jackson.github.io/rfars/reference/distracted_driver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving distracted drivers — distracted_driver","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Download FARS data files — download_fars","title":"(Internal) Download FARS data files — download_fars","text":"Download files NHTSA, unzip, prepare .","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Download FARS data files — download_fars","text":"","code":"download_fars(years, dest_raw, dest_prepd, states)"},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Download FARS data files — download_fars","text":"years Years downloaded, yyyy (character numeric formats) dest_raw Directory store raw CSV files dest_prepd Directory store prepared CSV files states (Optional) Inherits get_fars()","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Download FARS data files — download_fars","text":"Nothing directly current environment. Various CSV files stored either temporary directory dir specified user.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_fars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Download FARS data files — download_fars","text":"Raw files downloaded NHTSA.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_gescrss.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Download GES/CRSS data files — download_gescrss","title":"(Internal) Download GES/CRSS data files — download_gescrss","text":"Download files NHTSA, unzip, prepare .","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_gescrss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Download GES/CRSS data files — download_gescrss","text":"","code":"download_gescrss(years, dest_raw, dest_prepd, regions)"},{"path":"https://s87jackson.github.io/rfars/reference/download_gescrss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Download GES/CRSS data files — download_gescrss","text":"years Years downloaded, yyyy (character numeric formats) dest_raw Directory store raw CSV files dest_prepd Directory store prepared CSV files regions (Optional) Inherits get_gescrss()","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_gescrss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Download GES/CRSS data files — download_gescrss","text":"Nothing directly current environment. Various CSV files stored either temporary directory dir specified user.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/download_gescrss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Internal) Download GES/CRSS data files — download_gescrss","text":"Raw files downloaded directly NHTSA.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/driver_age.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving drivers of a given age — driver_age","title":"(Internal) Find crashes involving drivers of a given age — driver_age","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/driver_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving drivers of a given age — driver_age","text":"","code":"driver_age(df, age_min, age_max)"},{"path":"https://s87jackson.github.io/rfars/reference/driver_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving drivers of a given age — driver_age","text":"df FARS GESCRSS data object searched. age_min Lower bound driver age (inclusive). age_max Upper bound driver age (inclusive).","code":""},{"path":"https://s87jackson.github.io/rfars/reference/drugs.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving drugs — drugs","title":"(Internal) Find crashes involving drugs — drugs","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/drugs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving drugs — drugs","text":"","code":"drugs(df)"},{"path":"https://s87jackson.github.io/rfars/reference/drugs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving drugs — drugs","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"FARS Codebook — fars_codebook","title":"FARS Codebook — fars_codebook","text":"table describing FARS variable name, value, corresponding value label.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FARS Codebook — fars_codebook","text":"","code":"fars_codebook"},{"path":"https://s87jackson.github.io/rfars/reference/fars_codebook.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FARS Codebook — fars_codebook","text":"data frame 15,951 rows 19 variables: source source data (either FARS GES/CRSS). file data file contains given variable. name_ncsa original name data element. name_rfars modified data element name used rfars label label data element (constituent values). Definition data element's definition, pulled Analytical User Manual. Additional Information Additional information data element, pulled Analytical User Manual. value original value data element. value_label de-coded value label. 2014 Indicator: 1 valid 2014, NA otherwise. 2015 Indicator: 1 valid 2015, NA otherwise. 2016 Indicator: 1 valid 2016, NA otherwise. 2017 Indicator: 1 valid 2017, NA otherwise. 2018 Indicator: 1 valid 2018, NA otherwise. 2019 Indicator: 1 valid 2019, NA otherwise. 2020 Indicator: 1 valid 2020, NA otherwise. 2021 Indicator: 1 valid 2021, NA otherwise. 2022 Indicator: 1 valid 2022, NA otherwise. 2023 Indicator: 1 valid 2023, NA otherwise.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/fars_codebook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FARS Codebook — fars_codebook","text":"codebook serves useful reference researchers using FARS data.    'source' variable intended help combine gescrss_codebook.    Data elements relatively stable occasionally discontinued, created anew,    modified. 'year' variable helps indicate availability data elements,    differentiates different definitions time. Users always    check discontinuities tabulating cases. 'file' variable indicates file given data element originally appeared. , files refers    SAS files downloaded NHTSA. data elements stayed original    file. moved multi_ files. example, 'weather'    originates 'accident' file, appears multi_acc data object    created rfars. 'name_ncsa' variable describes data element's name assigned    NCSA (organization within NHTSA manages database). maximize    compatibility years ease use programming, 'name_rfars'    provides cleaned naming convention (via janitor::clean_names()). data element 'label', human-readable version    element names. example, label 'road_fnc' 'Roadway Function Class'.    definitions may provide enough information help users    conduct analysis. Consult Analytical User’s Manual    definitions details. 'Definition' 'Additional Information' extracted    Analytical User’s Manual. data element multiple 'value'-'value_label' pairs: 'value' represents    original, non-human-readable value (usually number), 'value_label'    represents corresponding text value. example, 'road_fnc', 1 ('value')    corresponds 'Rural-Principal Arterial-Interstate' ('value_label'), 2 corresponds    'Rural-Principal Arterial-', etc. @source Codebooks automatically generated extracting SAS format catalogs    (.sas7bcat files) VALUE statements .sas files data processing,    consolidating variable names, labels, value-label mappings across    years searchable reference tables. Source files published NHTSA available    .","code":""},{"path":[]},{"path":"https://s87jackson.github.io/rfars/reference/fars_codebook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FARS Codebook — fars_codebook","text":"","code":"head(rfars::fars_codebook) #>    source     file name_ncsa name_rfars        label #>    <char>   <char>    <char>     <char>       <char> #> 1:   FARS accident     STATE      state State Number #> 2:   FARS accident     STATE      state State Number #> 3:   FARS accident     STATE      state State Number #> 4:   FARS accident     STATE      state State Number #> 5:   FARS accident     STATE      state State Number #> 6:   FARS accident     STATE      state State Number #>                                                                                                                                                                                      Definition #>                                                                                                                                                                                          <char> #> 1: This data element identifies the State in which the crash occurred. The codes are from the General Services Administration’s (GSA) publication of worldwide Geographic Location Codes (GLC). #> 2: This data element identifies the State in which the crash occurred. The codes are from the General Services Administration’s (GSA) publication of worldwide Geographic Location Codes (GLC). #> 3: This data element identifies the State in which the crash occurred. The codes are from the General Services Administration’s (GSA) publication of worldwide Geographic Location Codes (GLC). #> 4: This data element identifies the State in which the crash occurred. The codes are from the General Services Administration’s (GSA) publication of worldwide Geographic Location Codes (GLC). #> 5: This data element identifies the State in which the crash occurred. The codes are from the General Services Administration’s (GSA) publication of worldwide Geographic Location Codes (GLC). #> 6: This data element identifies the State in which the crash occurred. The codes are from the General Services Administration’s (GSA) publication of worldwide Geographic Location Codes (GLC). #>                                                                                                                                                    Additional Information #>                                                                                                                                                                    <char> #> 1: GSA State data elements except for 43, Puerto Rico. The State in which the vehicle is registered, REG_STAT, is found in the Vehicle data file; the coding is the same. #> 2: GSA State data elements except for 43, Puerto Rico. The State in which the vehicle is registered, REG_STAT, is found in the Vehicle data file; the coding is the same. #> 3: GSA State data elements except for 43, Puerto Rico. The State in which the vehicle is registered, REG_STAT, is found in the Vehicle data file; the coding is the same. #> 4: GSA State data elements except for 43, Puerto Rico. The State in which the vehicle is registered, REG_STAT, is found in the Vehicle data file; the coding is the same. #> 5: GSA State data elements except for 43, Puerto Rico. The State in which the vehicle is registered, REG_STAT, is found in the Vehicle data file; the coding is the same. #> 6: GSA State data elements except for 43, Puerto Rico. The State in which the vehicle is registered, REG_STAT, is found in the Vehicle data file; the coding is the same. #>     value value_label   2014   2015   2016   2017   2018   2019   2020   2021 #>    <char>      <char> <char> <char> <char> <char> <char> <char> <char> <char> #> 1:      1     Alabama      1      1      1      1      1      1      1      1 #> 2:      2      Alaska      1      1      1      1      1      1      1      1 #> 3:      4     Arizona      1      1      1      1      1      1      1      1 #> 4:      5    Arkansas      1      1      1      1      1      1      1      1 #> 5:      6  California      1      1      1      1      1      1      1      1 #> 6:      8    Colorado      1      1      1      1      1      1      1      1 #>      2022   2023 #>    <char> <char> #> 1:      1      1 #> 2:      1      1 #> 3:      1      1 #> 4:      1      1 #> 5:      1      1 #> 6:      1      1"},{"path":"https://s87jackson.github.io/rfars/reference/geo_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Synonym table for various geographical scales — geo_relations","title":"Synonym table for various geographical scales — geo_relations","text":"dataset providing different ways refer states counties.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/geo_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synonym table for various geographical scales — geo_relations","text":"","code":"geo_relations"},{"path":"https://s87jackson.github.io/rfars/reference/geo_relations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synonym table for various geographical scales — geo_relations","text":"data frame 3,142 rows 6 variables: fips_state 2-digit FIPS code indicating state fips_county 3-digit FIPS code indicating county within state fips_tract 6-digit FIPS code indicating tract within county state_name_abbr 2-character, capitalized state abbreviation state_name_full fully spelled case-sensitive state name county_name_abbr abbreviated county name (usually minus word 'County') county_name_full fully spelled case-sensitive county name region fully spelled case-sensitive NHTSA region constituent states region_abbr abbreviated NHTSA region (ne, mw, s, w)","code":""},{"path":"https://s87jackson.github.io/rfars/reference/geo_relations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Synonym table for various geographical scales — geo_relations","text":"https://www.census.gov/geographies/reference-files/2015/demo/popest/2015-fips.html","code":""},{"path":"https://s87jackson.github.io/rfars/reference/gescrss_codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"GESCRSS Codebook — gescrss_codebook","title":"GESCRSS Codebook — gescrss_codebook","text":"table describing GESCRSS variable name, value, corresponding value label.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/gescrss_codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GESCRSS Codebook — gescrss_codebook","text":"","code":"gescrss_codebook"},{"path":"https://s87jackson.github.io/rfars/reference/gescrss_codebook.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GESCRSS Codebook — gescrss_codebook","text":"data frame 34,662 rows 8 variables: source source data (either FARS GESCRSS). file data file contains given variable. name_ncsa original name data element. name_rfars modified data element name used rfars label label data element (constituent values). Definition data element's definition, pulled Analytical User Manual Additional Information Additional information data element, pulled Analytical User Manual. value original value data element. value_label de-coded value label. 2014 Indicator: 1 valid 2014, NA otherwise. 2015 Indicator: 1 valid 2015, NA otherwise. 2016 Indicator: 1 valid 2016, NA otherwise. 2017 Indicator: 1 valid 2017, NA otherwise. 2018 Indicator: 1 valid 2018, NA otherwise. 2019 Indicator: 1 valid 2019, NA otherwise. 2020 Indicator: 1 valid 2020, NA otherwise. 2021 Indicator: 1 valid 2021, NA otherwise. 2022 Indicator: 1 valid 2022, NA otherwise. 2023 Indicator: 1 valid 2023, NA otherwise.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/gescrss_codebook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GESCRSS Codebook — gescrss_codebook","text":"codebook serves useful reference researchers using GES/CRSS data.    'source' variable intended help combine fars_codebook.    Data elements relatively stable occasionally discontinued, created anew,    modified. 'year' variable helps indicate availability data elements,    differentiates different definitions time. Users always    check discontinuities tabulating cases. 'file' variable indicates file given data element originally appeared. , files refers    SAS files downloaded NHTSA. data elements stayed original    file. moved multi_ files. example, 'weather'    originates 'accident' file, appears multi_acc data object    created rfars. 'name_ncsa' variable describes data element's name assigned    NCSA (organization within NHTSA manages database). maximize    compatibility years ease use programming, 'name_rfars'    provides cleaned naming convention (via janitor::clean_names()). data element 'label', human-readable version    element names. example, label 'harm_ev' 'First Harmful Event'.    definitions may provide enough information help users    conduct analysis. Consult CRSS User Manual    definitions details. 'Definition' 'Additional Information' extracted    Analytical User’s Manual. data element multiple 'value'-'value_label' pairs: 'value' represents    original, non-human-readable value (usually number), 'value_label'    represents corresponding text value. example, 'harm_ev', 1 ('value')    corresponds 'Rollover/Overturn' ('value_label'), 2 corresponds    'Fire/Explosion', etc. @source Codebooks automatically generated extracting SAS format catalogs    (.sas7bcat files) VALUE statements .sas files data processing,    consolidating variable names, labels, value-label mappings across    years searchable reference tables. Source files published NHTSA available    .","code":""},{"path":[]},{"path":"https://s87jackson.github.io/rfars/reference/gescrss_codebook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GESCRSS Codebook — gescrss_codebook","text":"","code":"head(rfars::gescrss_codebook) #>     source     file name_ncsa name_rfars                 label #>     <char>   <char>    <char>     <char>                <char> #> 1: GESCRSS accident  LAND_USE   land_use              Land Use #> 2: GESCRSS accident  LAND_USE   land_use              Land Use #> 3: GESCRSS accident  LAND_USE   land_use              Land Use #> 4: GESCRSS accident  LAND_USE   land_use              Land Use #> 5: GESCRSS accident  LAND_USE   land_use              Land Use #> 6: GESCRSS accident    REGION     region Region of the Country #>                                                                          Definition #>                                                                              <char> #> 1:                                                                             <NA> #> 2:                                                                             <NA> #> 3:                                                                             <NA> #> 4:                                                                             <NA> #> 5:                                                                             <NA> #> 6: This data element identifies the region of the country where the crash occurred. #>                                                                                                                                                                                                                    Additional Information #>                                                                                                                                                                                                                                    <char> #> 1:                                                                                                                                                                                                                                   <NA> #> 2:                                                                                                                                                                                                                                   <NA> #> 3:                                                                                                                                                                                                                                   <NA> #> 4:                                                                                                                                                                                                                                   <NA> #> 5:                                                                                                                                                                                                                                   <NA> #> 6: This data element is derived based on the State in which the Primary Sampling Unit is located where the crash occurred. See Appendix B: Rules for Derived Data Elements for an explanation of this data element and how it is derived. #>     value                                    value_label   2014   2015   2016 #>    <char>                                         <char> <char> <char> <char> #> 1:      1      Within area of population 25,000 - 49,999      1      1   <NA> #> 2:      2     Within area of population 50,000 - 100,000      1      1   <NA> #> 3:      3             Within area of population 100,000+      1      1   <NA> #> 4:      8                                     Other area      1      1   <NA> #> 5:      9                                        Unknown      1      1   <NA> #> 6:      1 Northeast (PA, NJ, NY, NH, VT, RI, MA, ME, CT)      1      1      1 #>      2017   2018   2019   2020   2021   2022   2023 #>    <char> <char> <char> <char> <char> <char> <char> #> 1:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA> #> 2:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA> #> 3:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA> #> 4:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA> #> 5:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA> #> 6:      1      1      1      1      1      1      1"},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FARS data — get_fars","title":"Get FARS data — get_fars","text":"Bring FARS data current environment, whether downloading anew     using pre-existing files.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FARS data — get_fars","text":"","code":"get_fars(   years = 2014:2023,   states = NULL,   source = c(\"zenodo\", \"nhtsa\"),   proceed = FALSE,   dir = NULL,   cache = NULL )"},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FARS data — get_fars","text":"years Years downloaded, yyyy (character numeric formats, defaults last 10 years). states States keep. Leave NULL (default) keep states. Can specified full state name (e.g. \"Virginia\"), abbreviation (\"VA\"), FIPS code (51). source source data: 'zenodo' (default) pulls prepared dataset Zenodo, 'nhtsa' pulls raw files NHTSA's FTP site prepares machine. 'zenodo' much faster provides dataset produced using source='nhtsa'. proceed Logical, whether proceed downloading files without asking user permission (defaults FALSE, thus asking permission) dir Directory search save 'FARS data' folder. NULL (default), files downloaded unzipped temporary directories prepared memory. Ignored source = 'zenodo'. cache name RDS file save use. specified file (e.g., 'myFARS.rds') exists 'dir' returned; , RDS file name saved 'dir' quick use subsequent calls. Ignored source = 'zenodo'.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get FARS data — get_fars","text":"FARS data object (list six tibbles: flat, multi_acc,    multi_veh, multi_per, events, codebook), described .","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get FARS data — get_fars","text":"function provides FARS database specified years states.    default, pulls Zenodo repository speed memory efficiency.    can also pull raw files NHTSA process memory,    use RDS file saved machine. source = 'nhtsa' directory (dir) specified, SAS files downloaded    tempdir(), also prepared, combined, brought    current environment. specify directory (dir), function    look 'FARS data' folder. found, created    populated raw prepared SAS RDS files, otherwise    function makes sure requested years present asks permission    download missing years. object returned list class 'FARS'. contains six tibbles:    flat, multi_acc, multi_veh, multi_per, events, codebook. Flat files wide-formatted presented person level.    crashes involve least one motor vehicle,    may contain one multiple people. three    entities crash data. flat files therefore repeat data elements    across multiple rows. Please conduct analysis entity mind. data elements can include multiple values data level    (e.g., multiple weather conditions corresponding crash, multiple    crash factors related vehicle person). elements    collected yyyy_multi_[acc/veh/per].rds files long format.    files contain crash, vehicle, person identifiers, two    variables labelled name value. correspond    variable names raw data files corresponding values,    respectively. events tibble provides sequence events vehicles involved    crash. See Crash Sequences vignette example. Finally, codebook tibble serves searchable codebook files given year. Please review FARS Analytical User's Manual","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_fars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get FARS data — get_fars","text":"","code":"if (FALSE) { # \\dontrun{     myFARS <- get_fars(years = 2021, states = \"VA\")   } # }"},{"path":"https://s87jackson.github.io/rfars/reference/get_gescrss.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GES/CRSS data — get_gescrss","title":"Get GES/CRSS data — get_gescrss","text":"Bring GES/CRSS data current environment, whether downloading anew     using pre-existing files.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_gescrss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GES/CRSS data — get_gescrss","text":"","code":"get_gescrss(   years = 2014:2023,   regions = c(\"mw\", \"ne\", \"s\", \"w\"),   source = c(\"zenodo\", \"nhtsa\"),   proceed = FALSE,   dir = NULL,   cache = NULL )"},{"path":"https://s87jackson.github.io/rfars/reference/get_gescrss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GES/CRSS data — get_gescrss","text":"years Years downloaded, yyyy (character numeric formats, defaults last 10 years). regions (Optional) Regions keep: mw=midwest, ne=northeast, s=south, w=west. source source data: 'zenodo' (default) pulls prepared dataset Zenodo, 'nhtsa' pulls raw files NHTSA's FTP site prepares machine. 'zenodo' much faster provides dataset produced using source='nhtsa'. proceed Logical, whether proceed downloading files without asking user permission (defaults FALSE, thus asking permission) dir Directory search save 'GESCRSS data' folder. NULL (default), files downloaded unzipped temporary directories prepared memory. Ignored source = 'zenodo'. cache name RDS file save use. specified file (e.g., 'myFARS.rds') exists 'dir' returned; , RDS file name saved 'dir' quick use subsequent calls. Ignored source = 'zenodo'.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_gescrss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GES/CRSS data — get_gescrss","text":"GESCRSS data object (list six tibbles: flat, multi_acc,     multi_veh, multi_per, events, codebook).","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_gescrss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get GES/CRSS data — get_gescrss","text":"function provides GES/CRSS database specified years regions    default, pulls Zenodo repository speed memory efficiency.    can also pull raw files NHTSA process memory,    use RDS file saved machine. source = 'nhtsa' directory (dir) specified, SAS files downloaded    tempdir(), also prepared, combined, brought    current environment. specify directory (dir), function    look 'GESCRSS data' folder. found, created    populated raw prepared SAS RDS files, otherwise    function makes sure requested years present asks permission    download missing years. object returned list class 'GESCRSS'. contains six tibbles:    flat, multi_acc, multi_veh, multi_per, events, codebook. Flat files wide-formatted presented person level.    crashes involve least one motor vehicle,    may contain one multiple people. three    entities crash data. flat files therefore repeat data elements    across multiple rows. Please conduct analysis entity mind. data elements can include multiple values data level    (e.g., multiple weather conditions corresponding crash, multiple    crash factors related vehicle person). elements    collected yyyy_multi_[acc/veh/per].rds files long format.    files contain crash, vehicle, person identifiers, two    variables labelled name value. correspond    variable names raw data files corresponding values,    respectively. events tibble provides sequence events vehicles involved    crash. See Crash Sequences vignette example. codebook tibble serves searchable codebook files given year. Please review CRSS Analytical User's Manual Regions follows:       mw = Midwest   = OH, , IL, MI, WI, MN, ND, SD, NE, IA, MO, KS       ne = Northeast = PA, NJ, NY, NH, VT, RI, MA, , CT       s  = South     = MD, DE, DC, WV, VA, KY, TN, NC, SC, GA, FL, AL, MS, LA, AR, OK, TX       w  = West      = MT, ID, WA, , CA, NV, NM, AZ, UT, CO, WY, AK, HI","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_gescrss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GES/CRSS data — get_gescrss","text":"","code":"if (FALSE) { # \\dontrun{     myGESCRSS <- get_gescrss(years = 2021, regions = \"s\")   } # }"},{"path":"https://s87jackson.github.io/rfars/reference/get_sas_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Check SAS attributes — get_sas_attrs","title":"(Internal) Check SAS attributes — get_sas_attrs","text":"(Internal) Check SAS attributes","code":""},{"path":"https://s87jackson.github.io/rfars/reference/get_sas_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Check SAS attributes — get_sas_attrs","text":"","code":"get_sas_attrs(data)"},{"path":"https://s87jackson.github.io/rfars/reference/get_sas_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Check SAS attributes — get_sas_attrs","text":"data object produced haven::read_sas()","code":""},{"path":"https://s87jackson.github.io/rfars/reference/hit_and_run.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find hit and run crashes — hit_and_run","title":"(Internal) Find hit and run crashes — hit_and_run","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/hit_and_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find hit and run crashes — hit_and_run","text":"","code":"hit_and_run(df)"},{"path":"https://s87jackson.github.io/rfars/reference/hit_and_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find hit and run crashes — hit_and_run","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/import_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Import the multi_ files — import_multi","title":"(Internal) Import the multi_ files — import_multi","text":"internal function imports multi_ files","code":""},{"path":"https://s87jackson.github.io/rfars/reference/import_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Import the multi_ files — import_multi","text":"","code":"import_multi(filename, where)"},{"path":"https://s87jackson.github.io/rfars/reference/import_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Import the multi_ files — import_multi","text":"filename filename (e.g. \"multi_acc.csv\") imported directory search within","code":""},{"path":"https://s87jackson.github.io/rfars/reference/large_trucks.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving large trucks — large_trucks","title":"(Internal) Find crashes involving large trucks — large_trucks","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/large_trucks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving large trucks — large_trucks","text":"","code":"large_trucks(df)"},{"path":"https://s87jackson.github.io/rfars/reference/large_trucks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving large trucks — large_trucks","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/make_all_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Make id and year numeric — make_all_numeric","title":"(Internal) Make id and year numeric — make_all_numeric","text":"(Internal) Make id year numeric","code":""},{"path":"https://s87jackson.github.io/rfars/reference/make_all_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Make id and year numeric — make_all_numeric","text":"","code":"make_all_numeric(df)"},{"path":"https://s87jackson.github.io/rfars/reference/make_all_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Make id and year numeric — make_all_numeric","text":"df input dataframe","code":""},{"path":"https://s87jackson.github.io/rfars/reference/make_id.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Generate an ID variable — make_id","title":"(Internal) Generate an ID variable — make_id","text":"(Internal) Generate ID variable","code":""},{"path":"https://s87jackson.github.io/rfars/reference/make_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Generate an ID variable — make_id","text":"","code":"make_id(df)"},{"path":"https://s87jackson.github.io/rfars/reference/make_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Generate an ID variable — make_id","text":"df dataframe make id","code":""},{"path":"https://s87jackson.github.io/rfars/reference/motorcycle.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving motorcycles — motorcycle","title":"(Internal) Find crashes involving motorcycles — motorcycle","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/motorcycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving motorcycles — motorcycle","text":"","code":"motorcycle(df)"},{"path":"https://s87jackson.github.io/rfars/reference/motorcycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving motorcycles — motorcycle","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/parse_sas_format.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Parse formats.sas instead of using a .sas7bcat file — parse_sas_format","title":"(Internal) Parse formats.sas instead of using a .sas7bcat file — parse_sas_format","text":"(Internal) Parse formats.sas instead using .sas7bcat file","code":""},{"path":"https://s87jackson.github.io/rfars/reference/parse_sas_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Parse formats.sas instead of using a .sas7bcat file — parse_sas_format","text":"","code":"parse_sas_format(file_path)"},{"path":"https://s87jackson.github.io/rfars/reference/parse_sas_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Parse formats.sas instead of using a .sas7bcat file — parse_sas_format","text":"file_path path formats.sas file","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedalcyclist.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving pedalcyclists — pedalcyclist","title":"(Internal) Find crashes involving pedalcyclists — pedalcyclist","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedalcyclist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving pedalcyclists — pedalcyclist","text":"","code":"pedalcyclist(df)"},{"path":"https://s87jackson.github.io/rfars/reference/pedalcyclist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving pedalcyclists — pedalcyclist","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedbike.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving pedstrians or bicyclists — pedbike","title":"(Internal) Find crashes involving pedstrians or bicyclists — pedbike","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedbike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving pedstrians or bicyclists — pedbike","text":"","code":"pedbike(df)"},{"path":"https://s87jackson.github.io/rfars/reference/pedbike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving pedstrians or bicyclists — pedbike","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedestrian.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving pedestrians — pedestrian","title":"(Internal) Find crashes involving pedestrians — pedestrian","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pedestrian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving pedestrians — pedestrian","text":"","code":"pedestrian(df)"},{"path":"https://s87jackson.github.io/rfars/reference/pedestrian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving pedestrians — pedestrian","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://s87jackson.github.io/rfars/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/police_pursuit.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving police pursuits — police_pursuit","title":"(Internal) Find crashes involving police pursuits — police_pursuit","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/police_pursuit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving police pursuits — police_pursuit","text":"","code":"police_pursuit(df)"},{"path":"https://s87jackson.github.io/rfars/reference/police_pursuit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving police pursuits — police_pursuit","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare downloaded FARS files for use — prep_fars","title":"Prepare downloaded FARS files for use — prep_fars","text":"Prepare downloaded FARS files use","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare downloaded FARS files for use — prep_fars","text":"","code":"prep_fars(y, wd, rawfiles, prepared_dir, states)"},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare downloaded FARS files for use — prep_fars","text":"y year, passed prep_fars wd working directory, , passed prep_fars rawfiles dataframe translating filenames standard terms, passed prep_fars prepared_dir location prepared files saved, passed prep_fars states (Optional) Inherits get_fars()","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_fars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare downloaded FARS files for use — prep_fars","text":"Produces six files: yyyy_flat.rds, yyyy_multi_acc.rds,     yyyy_multi_veh.rds, yyyy_multi_per.rds, yyyy_events.rds, codebook.rds","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_gescrss.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare downloaded GES/CRSS files for use — prep_gescrss","title":"Prepare downloaded GES/CRSS files for use — prep_gescrss","text":"Prepare downloaded GES/CRSS files use","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_gescrss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare downloaded GES/CRSS files for use — prep_gescrss","text":"","code":"prep_gescrss(y, wd, rawfiles, prepared_dir, regions)"},{"path":"https://s87jackson.github.io/rfars/reference/prep_gescrss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare downloaded GES/CRSS files for use — prep_gescrss","text":"y year, passed prep_gescrss wd working directory, , passed prep_gescrss rawfiles dataframe translating filenames standard terms, passed prep_gescrss prepared_dir location prepared files saved, passed prep_gescrss regions (Optional) Inherits get_gescrss()","code":""},{"path":"https://s87jackson.github.io/rfars/reference/prep_gescrss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare downloaded GES/CRSS files for use — prep_gescrss","text":"Produces six files: yyyy_flat.rds, yyyy_multi_acc.rds,     yyyy_multi_veh.rds, yyyy_multi_per.rds, yyyy_events.rds, codebook.rds","code":""},{"path":"https://s87jackson.github.io/rfars/reference/read_basic_sas.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Takes care of basic SAS file reading — read_basic_sas","title":"(Internal) Takes care of basic SAS file reading — read_basic_sas","text":"(Internal) Takes care basic SAS file reading","code":""},{"path":"https://s87jackson.github.io/rfars/reference/read_basic_sas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Takes care of basic SAS file reading — read_basic_sas","text":"","code":"read_basic_sas(x, wd, rawfiles, catfile, imps = NULL, omits = NULL)"},{"path":"https://s87jackson.github.io/rfars/reference/read_basic_sas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Takes care of basic SAS file reading — read_basic_sas","text":"x cleaned name data table (SAS7BDAT). wd working directory files rawfiles data frame connecting raw filenames cleaned ones. catfile location sas7bcat file imps named list passed use_imp(). item's name represents non-imputed variable name; item represents related imputed variable. omits Character vector columns omit","code":""},{"path":[]},{"path":"https://s87jackson.github.io/rfars/reference/road_depart.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving road departures — road_depart","title":"(Internal) Find crashes involving road departures — road_depart","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/road_depart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving road departures — road_depart","text":"","code":"road_depart(df)"},{"path":"https://s87jackson.github.io/rfars/reference/road_depart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving road departures — road_depart","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/rollover.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving rollovers — rollover","title":"(Internal) Find crashes involving rollovers — rollover","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/rollover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving rollovers — rollover","text":"","code":"rollover(df)"},{"path":"https://s87jackson.github.io/rfars/reference/rollover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving rollovers — rollover","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/speeding.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Find crashes involving speeding — speeding","title":"(Internal) Find crashes involving speeding — speeding","text":"internal functions take FARS object created use_fars look     various cases, distracted drowsy drivers.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/speeding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Find crashes involving speeding — speeding","text":"","code":"speeding(df)"},{"path":"https://s87jackson.github.io/rfars/reference/speeding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Find crashes involving speeding — speeding","text":"df FARS GESCRSS data object searched.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_fars.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Use FARS data files — use_fars","title":"(Internal) Use FARS data files — use_fars","text":"Compile multiple years prepared FARS data.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_fars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Use FARS data files — use_fars","text":"","code":"use_fars(dir, prepared_dir, cache)"},{"path":"https://s87jackson.github.io/rfars/reference/use_fars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Use FARS data files — use_fars","text":"dir Inherits get_fars(). prepared_dir Inherits get_fars(). cache Inherits get_fars().","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_fars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Use FARS data files — use_fars","text":"Returns object class 'FARS' list six tibbles:     flat, multi_acc, multi_veh, multi_per, events, codebook.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_gescrss.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Use GESCRSS data files — use_gescrss","title":"(Internal) Use GESCRSS data files — use_gescrss","text":"Compile multiple years prepared GESCRSS data.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_gescrss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Use GESCRSS data files — use_gescrss","text":"","code":"use_gescrss(dir, prepared_dir, cache)"},{"path":"https://s87jackson.github.io/rfars/reference/use_gescrss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Use GESCRSS data files — use_gescrss","text":"dir Inherits get_gescrss(). prepared_dir Inherits get_gescrss(). cache Inherits get_gescrss().","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_gescrss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Internal) Use GESCRSS data files — use_gescrss","text":"Returns object class 'GESCRSS' list six tibbles:     flat, multi_acc, multi_veh, multi_per, events, codebook.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_imp.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) use_imp — use_imp","title":"(Internal) use_imp — use_imp","text":"internal function uses imputed variables (present many GES/CRSS tables)","code":""},{"path":"https://s87jackson.github.io/rfars/reference/use_imp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) use_imp — use_imp","text":"","code":"use_imp(df, original, imputed, show = FALSE)"},{"path":"https://s87jackson.github.io/rfars/reference/use_imp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) use_imp — use_imp","text":"df input data frame. original original, non-imputed variable. imputed imputed variable (often _im suffix). show Logical (FALSE default) Show differences original imputed values.","code":""},{"path":"https://s87jackson.github.io/rfars/reference/validate_states.html","id":null,"dir":"Reference","previous_headings":"","what":"(Internal) Validate user-provided list of states — validate_states","title":"(Internal) Validate user-provided list of states — validate_states","text":"(Internal) Validate user-provided list states","code":""},{"path":"https://s87jackson.github.io/rfars/reference/validate_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Internal) Validate user-provided list of states — validate_states","text":"","code":"validate_states(states)"},{"path":"https://s87jackson.github.io/rfars/reference/validate_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Internal) Validate user-provided list of states — validate_states","text":"states States specified get_fars, prep_fars, counts","code":""},{"path":"https://s87jackson.github.io/rfars/news/index.html","id":"rfars-200","dir":"Changelog","previous_headings":"","what":"rfars 2.0.0","title":"rfars 2.0.0","text":"Added data 2023 Added ‘Definition’ ‘Additional Information’ fields User Manuals codebooks Significantly improved speed memory usage downloading RDS files Zenodo default Improved data processing status updates Fixed bug downloading 2020 data Added multiple imputation BAC data elements a1:a10 p1:p10 get_fars() output (flat object) Added “Alcohol Counts” vignette provide guidance using multiple imputation data Added involved = \"\" parameter option counts() function Added annual_counts dataset Dropped support data older 2014","code":""},{"path":"https://s87jackson.github.io/rfars/news/index.html","id":"rfars-120","dir":"Changelog","previous_headings":"","what":"rfars 1.2.0","title":"rfars 1.2.0","text":"CRAN release: 2024-04-06 Added data 2022 Fixed bugs 2012-2016 Added status updates let know data processed Implemented methodology use prior codebook entries formats unavailable Fixed bug causing omission motor carrier IDs Integrated rfars web application bring crash data non-R-users","code":""},{"path":"https://s87jackson.github.io/rfars/news/index.html","id":"rfars-110","dir":"Changelog","previous_headings":"","what":"rfars 1.1.0","title":"rfars 1.1.0","text":"CRAN release: 2024-02-15 Streamlined README content Cleaned vignettes Incremented version number communicate end beta testing stage","code":""},{"path":"https://s87jackson.github.io/rfars/news/index.html","id":"rfars-031","dir":"Changelog","previous_headings":"","what":"rfars 0.3.1","title":"rfars 0.3.1","text":"Adjusted code account file structure changes data provider","code":""},{"path":"https://s87jackson.github.io/rfars/news/index.html","id":"rfars-030","dir":"Changelog","previous_headings":"","what":"rfars 0.3.0","title":"rfars 0.3.0","text":"CRAN release: 2023-05-05 Expanded FARS coverage 2011-2021 Added get_gescrss() get GES/CRSS data Modified get_ functions produce codebook.csv file Included codebook.rds file quick reference geo_relations table now includes NHTSA regions Improved counts() function Added compare_counts() function SAS files pulled NHTSA, rather CSVs Consolidated prep_fars_yyyy functions prep_fars()","code":""},{"path":"https://s87jackson.github.io/rfars/news/index.html","id":"rfars-020","dir":"Changelog","previous_headings":"","what":"rfars 0.2.0","title":"rfars 0.2.0","text":"CRAN release: 2022-11-01 Added ability download FARS data tempdir. Improved documentation. Streamlined workflow contained get_fars(). Developed hex sticker.","code":""},{"path":"https://s87jackson.github.io/rfars/news/index.html","id":"rfars-010","dir":"Changelog","previous_headings":"","what":"rfars 0.1.0","title":"rfars 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
